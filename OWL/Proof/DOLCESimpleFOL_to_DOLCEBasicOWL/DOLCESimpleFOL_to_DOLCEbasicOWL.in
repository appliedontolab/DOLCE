
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%DOLCE SIMPLE (FOL) version for MACE4 / PROVER9 by D. Porello, L. Vieu, S. Borgo, C. Masolo.
%
%
%Based on the axioms of DOLCE (D18) proved consistent in
%(v. DolceSimple) https://github.com/spechub/Hets-lib/blob/master/Ontology/Dolce/DolceSimpl.dol
%NOTE: The names of the axioms and theorems of DOLCE SIMPLE are those from DOLCE D18 for direct comparison.
%(http://www.loa.istc.cnr.it/wp-content/uploads/2020/03/D18inv.31-12-03.pdf)
%
%General simplifications of DOLCE SIMPLE with respect to DOLCE D18
%
%1. Instead of a General Extensional Mereology, we have only a weak mereology. So (Ad9) and (Ad15) are weakened assuming only the existence of binary sums. Also (Ad8) (strong supplementation) is replaced by assuming the existence of binary differences.
%2. The predicate PRE (being present) defined in D18 by means of the mereological fusion is here introduced as a primitive relation.
%3. The ''spatial inclusion'' relation is not defined here (originally it needs fusion) therefore axioms (Ad19),(Ad28), and (Ad68) are not expressed.
%4. The quality relation (qt) is simplified considering only ''direct qualities''(dQt).
%5.	Axioms (Ad56),(Ad57),(Ad63), and (Ad64) are instantiated only by temporal and spatial locations (TL and SL) and by Time intervals (T) and Space Regions (S), i.e. all the leaves present in DOLCE D18.
%6. There are no modalities in DOLCE SIMPLE. D18 was in fact a first-order modal theory (in modal logic QS5 with constant domain). Here we omit the modal structure and accordingly the definitions of the ''dependencies'', besides "specific dependence" (sd).
%7. To obtain more populated models by means of MACE4, we omit the existence of sums and (Ad29).


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

%Proof that DOLCESimpleFOL entails each axiom of DOLCEBasicOWL


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%



set(prolog_style_variables).

assign(max_megs, 2000).  %%to use for lareger model.

formulas(assumptions).


%Taxonomy%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

%Taxonomy: inclusions
(all X ((ab(X) | ed(X) | pd(X) | q(X)) <-> pt(X))).
(all X ((as(X) | nped(X) | ped(X)) <-> ed(X))).
(all X ((pro(X) | st(X)) <-> stv(X))).
(all X ((ev(X) | stv(X)) <-> pd(X))).
(all X ((aq(X) | pq(X) | tq(X)) <-> q(X))).
(all X ((acc(X) | ach(X)) <-> ev(X))).
(all X ((apo(X) | napo(X)) <-> pob(X))).
(all X ((sag(X) | sc(X)) <-> aso(X))).
(all X ((aso(X) | naso(X)) <-> sob(X))).
(all X ((sob(X) | mob(X)) <-> npob(X))).
(all X ((ar(X) | pr(X) | tr(X)) <-> r(X))).
(all X (r(X) -> ab(X))).
(all X ((f(X) | m(X) | pob(X)) <-> ped(X))).
(all X (npob(X) -> nped(X))).
(all X (s(X) -> pr(X))).
(all X (sl(X) -> pq(X))).
(all X (t(X) -> tr(X))).
(all X (tl(X) -> tq(X))).

%Taxonomy: disjoitness

(-(exists X (ab(X) & ed(X)))).
(-(exists X (ab(X) & pd(X)))).
(-(exists X (ab(X) & q(X)))).
(-(exists X (ed(X) & pd(X)))).
(-(exists X (pd(X) & q(X)))).
(-(exists X (ed(X) & q(X)))).
(-(exists X (ped(X) & nped(X)))).
(-(exists X (ped(X) & as(X)))).
(-(exists X (nped(X) & as(X)))).
(-(exists X (m(X) & f(X)))).
(-(exists X (f(X) & pob(X)))).
(-(exists X (m(X) & pob(X)))).
(-(exists X (mob(X) & sob(X)))).
(-(exists X (aso(X) & naso(X)))).
(-(exists X (sag(X) & sc(X)))).
(-(exists X (apo(X) & napo(X)))).
(-(exists X (ev(X) & stv(X)))).
(-(exists X (ach(X) & acc(X)))).
(-(exists X (st(X) & pro(X)))).
(-(exists X (tq(X) & pq(X)))).
(-(exists X (pq(X) & aq(X)))).
(-(exists X (tq(X) & aq(X)))).
(-(exists X (tr(X) & pr(X)))).
(-(exists X (pr(X) & ar(X)))).
(-(exists X (tr(X) & ar(X)))).




%Mereology%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%


(all X all Y (p(X,Y) -> ((ab(X) | pd(X)) & (ab(Y) | pd(Y))))) # label(parthood_Argument_restrictions_Ad1).
(all X all Y (p(X,Y) -> (pd(X) <-> pd(Y)))) # label(parthood_argument_restrictions_Ad2).
(all X all Y (p(X,Y) -> (ab(X) <-> ab(Y)))) # label(parthood_argument_restrictions_Ad3).
(all X all Y (p(X,Y) -> (t(X) <-> t(Y)))) # label(parthood_argument_restrictions_instance_of_Ad4_1).
(all X all Y (p(X,Y) -> (s(X) <-> s(Y)))) # label(parthood_argument_restrictions_instance_of_Ad4_2).
(all X all Y (p(X,Y) -> (ar(X) <-> ar(Y)))) # label(parthood_argument_restrictions_instance_of_Ad4_3).
(all X ((ab(X) | pd(X)) -> p(X,X))) # label(parthood_reflexivity_Ad5).
(all X all Y ((p(X,Y) & p(Y,X)) -> ((X)=(Y)))) # label(parthood_antysymmetry_Ad6).
(all X all Y all Z((p(X,Y) & p(Y,Z)) -> p(X,Z))) # label(parthood_transitivity_Ad7).
(all X all Y (pp(X,Y) <-> (p(X,Y) & -(p(Y,X))))) # label(proper_part_definition_Dd14).
(all X all Y (ov(X,Y) <-> (exists Z (p(Z,X) & p(Z,Y))))) # label(overlap_definition_Dd15).
(all X (at(X) <-> ((pd(X) | ab(X)) & -(exists Y (pp(Y,X)))))) # label(atom_definition_Dd16_corrected).
(all X all Y (atp(X,Y) <-> (p(X,Y)& at(X)))) # label(atomic_part_definition_Dd17).

(all X all Y all Z (sum(Z,X,Y) <-> (((ab(Z) & ab(X) & ab(Y)) | (pd(Z) & pd(X) & pd(Y))) & (all W (ov(W,Z) <-> (ov(W,X) | ov(W,Y))))))) # label(binary_sum_definition_Dd18).


%Check without this for larger models:
%(all X all Y ((ab(X) & ab(Y)) -> (exists Z (ab(Z) & sum(Z,X,Y))))) # label(binary_sum_existence_restriction_of_Ad9).
%(all X all Y ((pd(X) & pd(Y)) -> (exists Z (pd(Z) & sum(Z,X,Y))))) # label(binary_sum_existence_restriction_of_Ad9).

(all X all Y all Z (dif(Z,X,Y) <-> (((ab(Z) & ab(X) & ab(Y)) | (pd(Z) & pd(X) & pd(Y))) & (all W (p(W,Z) <-> (p(W,X) & -(ov(W,Y)))))))) # label(binary_difference_definition).

(all X all Y ((ab(X) & ab(Y) & -(p(X,Y))) -> (exists Z (dif(Z,X,Y))))) # label(binary_difference_existence_from_Ad8_1).
(all X all Y ((pd(X) & pd(Y) & -(p(X,Y))) -> (exists Z (dif(Z,X,Y))))) # label(binary_difference_existence_from_Ad8_2).


%Present_at%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%


(all X all T (pre(X,T) -> ((ed(X) | pd(X) | q(X)) & t(T)))) # label(present_at_partial_definition_Dd40).
(all X all T all S ((pre(X,T) & p(S,T)) -> (pre(X,S)))) # label(present_at_dissectivity_Td17).
(all X all Y all T ((pre(X,T) & p(X,Y)) -> pre(Y,T))) # label(present_at_part_of_Ad13).



%Temporary_parthood%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%


(all X all Y all T (tp(X,Y,T) -> (ed(X) & ed(Y) & t(T)))) # label(temporary_parthood_argument_restrictions_Ad10).

(all X all Y all T (tp(X,Y,T) & ped(Y) -> ped(X))) # label(temporary_parthood_argument_restrictions_Ad11_revised).
(all X all Y all T (tp(X,Y,T) & nped(Y) -> nped(X))) # label(temporary_parthood_argument_restrictions_Ad12_revised).

(all X all Y all Z all T ((tp(X,Y,T) & tp(Y,Z,T)) -> tp(X,Z,T))) # label(temporary_parthood_transitivity_Ad13).
(all X all T ((ed(X) & pre(X,T)) -> tp(X,X,T))) # label(temporary_parthood_reflexivity_Ad16).
(all X all Y all T (tov(X,Y,T) <-> (exists Z (tp(Z,X,T) & tp(Z,Y,T))))) # label(temporary_overlap_definition_Dd21).

%(all X all Y all T (tpp(X,Y,T) <-> (tp(X,Y,T) & (-tp(Y,X,T))))) # label(temporary_proper_part_definition_Dd20).

(all X all Y all T (tpp(X,Y,T) <-> (tp(X,Y,T) & -(X=Y)))) # label(temporary_proper_part_definition_weaker_than_Dd20).


(all X all Y all T ((ped(X) & ped(Y) & pre(X,T) & pre(Y,T) & (-tp(X,Y,T))) -> (exists Z (ped(Z) & tp(Z,X,T) & (-tov(Z,Y,T)))))) # label(temporary_proper_part_supplementation_Ad14).
(all X all Y all T ((nped(X) & nped(Y) & pre(X,T) & pre(Y,T) & (-tp(X,Y,T))) -> (exists Z (nped(Z) & tp(Z,X,T) & (-tov(Z,Y,T)))))) # label(temporary_proper_part_supplementation_Ad14).
%Check_without_it_for_larger_models

(all X all Y all T (tp(X,Y,T) -> (pre(X,T) & pre(Y,T)))) # label(temporary_parthood_Ad17).
(all X all Y all T (tp(X,Y,T) -> (all S (p(S,T) -> tp(X,Y,S))))) # label(temporary_parthood_Ad18).


(all X all T (tat(X,T) <-> (ed(X) & t(T) & -(exists Y (tpp(Y,X,T)))))) # label(temporary_proper_part_definition_Dd22_corrected).
(all X all Y all T (tatp(X,Y,T) <-> (tp(X,Y,T) & tat(X,T)))) # label(temporary_atomic_part_definition_Dd23).



(all X all Y all Z all T (sumt(Z,X,Y,T) <-> (pre(Z,T) & pre(X,T) & pre(Y,T) & ed(Z) & ed(X) & ed(Y) & (all W (tov(W,Z,T) <-> (tov(W,X,T) | tov(W,Y,T))))))) # label(temporary_sum_definition_from_Dd26).

%Temporal_parthood_on_PD%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

(all X all Y (temporalPart(X,Y) <-> (pd(X) & pd(Y) & p(X,Y) & (all Z ((pd(Z) & p(Z,Y) & (all T (pre(Z,T) -> pre(X,T)))) -> p(Z,X)))))).
%(all X all Y (temporalPart(X,Y) <-> (pd(X) & pd(Y) & p(X,Y)))). %[Note: add to prove transitivity of temporalPart quickly]

%Constitution%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

(all X all Y all T (k(X,Y,T) -> ((ed(X) | pd(X)) & (ed(Y) | pd(Y)) & t(T)))) # label(constitution_argument_restrictions_Ad20).

(all X all Y all T (k(X,Y,T) -> (ped(X) <-> ped(Y)))) # label(constitution__argument_restrictions_Ad21).

(all X all Y all T (k(X,Y,T) -> (nped(X) <-> nped(Y)))) # label(constitution__argument_restrictions_Ad22).

(all X all Y all T (k(X,Y,T) -> (pd(X) <-> pd(Y)))) # label(constitution_argument_restrictions_Ad23).

(all X all Y all T (k(X,Y,T) -> -(k(Y,X,T)))) # label(constitution__ground_axiom_Ad24).

(all X all Y all Z all T ((k(X,Y,T) & k(Y,Z,T)) -> k(X,Z,T))) # label(constitution__ground_axiom_Ad25).

(all X all Y all T (k(X,Y,T) -> (pre(X,T) & pre(Y,T)))) # label(constitution_Ad26).

(all X all Y all T (k(X,Y,T) -> (all S (p(S,T) -> k(X,Y,S))))) # label(constitution_Ad27_weakened).

%Check without for larger models:
(all X all Y all V all T ((k(X,Y,T) & tp(V,Y,T)) -> (exists U (tp(U,X,T) & k(U,V,T))))) # label(constitution_Ad29).


%Participation%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%


(all X all Y all T (pc(X,Y,T) -> (ed(X) & pd(Y) & t(T)))) # label(participation_argument_restrictions_Ad33).

(all X all T ((pd(X) & pre(X,T)) -> (exists Y (pc(Y,X,T))))) # label(participation_existential_Ad34).

(all X (ed(X) -> (exists Y exists T (pc(X,Y,T))))) # label(participation_existential_Ad35_corrected).

(all X all Y all T (pc(X,Y,T) -> (pre(X,T) & pre(Y,T)))) # label(participation_present_Ad36).

(all X all Y all T (pc(X,Y,T) -> (all S (p(S,T) -> pc(X,Y,S))))) # label(participation_present_Ad37).


%Direct_quality%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%


(all X all Y (dqt(X,Y) -> (q(X) & (ed(Y) | pd(Y))))) # label(direct_quality_argument_restrictions_Ad38_simplified).
(all X all Y (dqt(X,Y) -> (tq(X) <-> pd(Y)))) # label(direct_quality_argument_restrictions_Ad39_for_dqt).
(all X all Y (dqt(X,Y) -> (pq(X) <-> ped(Y)))) # label(direct_quality_argument_restrictions_Ad40_for_dqt).
(all X all Y (dqt(X,Y) -> (aq(X) <-> nped(Y)))) # label(direct_quality_argument_restrictions_Ad41_for_dqt).
(all X all Y all V ((dqt(X,Y) & dqt(X,V)) -> ((Y)=(V)))) # label(direct_quality_Ad43).
(all X all U all Y ((dqt(X,Y) & dqt(U,Y) & tl(X) & tl(U)) -> ((X)=(U)))) # label(direct_quality_unicity_Ad44_1).
(all X all U all Y ((dqt(X,Y) & dqt(U,Y) & sl(X) & sl(U)) -> ((X)=(U)))) # label(direct_quality_unicity_Ad44_2).


(all X (tq(X) -> (exists Y (dqt(X,Y) & pd(Y))))) # label(direct_quality_existential_Ad46).
(all X (pq(X) -> (exists Y (dqt(X,Y) & ped(Y))))) # label(direct_quality_existential_Ad47).
(all X (aq(X) -> (exists Y (dqt(X,Y) & nped(Y))))) # label(direct_quality_existential_Ad48).
(all X (pd(X) -> (exists Y (dqt(Y,X) & tl(Y))))) # label(direct_quality_existential_Ad49).
(all X (ped(X) -> (exists Y (dqt(Y,X) & sl(Y))))) # label(direct_quality_existential_Ad50).
(all X (nped(X) -> (exists Y (dqt(Y,X) & aq(Y))))) # label(direct_quality_existential_Ad51).

%Direct_quality_and_present_at

(all X all Q all T (dqt(Q,X) & pre(Q,T) -> pre(X,T))) # label(direct_quality_present_at).
(all X all Q all T (dqt(Q,X) & pre(X,T) -> pre(Q,T))) # label(direct_quality_present_at).



%Immediate_quale%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

(all X all Y (ql(X,Y) -> (tr(X) & tq(Y)))) # label(immediate_quale_argument_restrictions_Ad52).
(all X all Y ((ql(X,Y) & tl(Y)) -> t(X))) # label(immediate_quale_argument_restrictions_Ad53).
(all X all Y all U ((ql(X,Y) & ql(U,Y)) -> ((X)=(U)))) # label(immediate_quale_ground_Ad54).
(all X (tq(X) -> (exists Y (ql(Y,X))))) # label(immediate_quale_existential_Ad55).

%Temporary_quale%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

(all X all Y all T (tql(X,Y,T) -> ((pr(X) | ar(X)) & (pq(Y) | aq(Y)) & t(T)))) # label(temporary_quale_argument_restrictions_Ad58).

(all X all Y all T (tql(X,Y,T) -> (pr(X) <-> pq(Y)))) # label(temporary_quale_argument_restrictions_Ad59).
(all X all Y all T (tql(X,Y,T) -> (ar(X) <-> aq(Y)))) # label(temporary_quale_argument_restrictions_Ad60).
(all X all Y all T ((tql(X,Y,T) & sl(Y)) -> s(X))) # label(temporary_quale_argument_restrictions_Ad61).
(all X all Y all T ((tql(X,Y,T) & s(X)) -> sl(Y))) # label(temporary_quale_argument_restrictions_Ad61).
(all X all T (((pq(X) | aq(X)) & pre(X,T)) -> (exists Y (tql(Y,X,T))))) # label(temporary_quale_existential_Ad62).
(all X all Y all T (tql(X,Y,T) -> pre(Y,T))) # label(temporary_quale_present_Ad65).
(all X all Y all T (tql(X,Y,T) -> (all S (p(S,T) -> tql(X,Y,S))))) # label(temporary_quale_present_Ad66).


%Specific_constant_dependence%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

(all X all Y (sd(X,Y) <-> ((exists T (pre(X,T))) & (all T (pre(X,T) -> pre(Y,T)))))) # label(specific_dependence_Dd69).

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

%Achievements
(all X0 all X1 (ach(X0) & temporallyLocatedAt(X0,X1) -> at(X1))) # label(achievemants_atomic_Ad75).


%Accomplishment
(all X0 all X1 (acc(X0) & temporallyLocatedAt(X0,X1) -> (-at(X1)))) # label(achievemants_non_atomic_Ad76).

%States
(all X0 (st(X0) -> (all X1 (p(X1,X0) -> st(X1)))))  # label(states_parts_Ad77).

%Mental objects
(all X0 (mob(X0) -> (exists X1 ((sd(X0,X1) & apo(X1)))))) # label(mental_objects_agentive_Ad71).


%Endurant and perdurant participation

(all X (ed(X) -> exists Y (exists T pc(X,Y,T)))) # label(endurant_perdurant_participation_Ad35).



%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%Definitions required for proving DOLCESimple_FOL |= DOLCEBasic_OWL
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%



(all X(pt(X) -> thing(X))) # label(owl). %The automatic translation from OWL to FOL that we used includes the owl:thing Class, not present in DOLCE. We add it.

%Definitions of consantAtom (cat), constantAtomicPart (catp), consantPart(cp), constantProperPart(cpp), constantOverlap(cov)

(all X (cat(X) <-> (ed(X) & (exists T1 (pre(X,T1))) & all T (pre(X,T) -> tat(X,T)))))  # label(constant_atom).
(all X all Y (catp(X,Y) <-> (ed(X) & ed(Y) & (exists T1 (pre(X,T1))) & all T (pre(Y,T) -> tatp(X,Y,T)))))  # label(constant_atomic_part).
(all X all Y (cp(X,Y) <-> (ed(X) & ed(Y) & (exists T1 (pre(Y,T1))) & all T (pre(Y,T) -> tp(X,Y,T))))) # label(constant_part_Dd25).
%(all X all Y (cpp(X,Y) <-> (ed(X) & ed(Y) & (exists T1 (pre(Y,T1))) & all T (pre(Y,T) -> tpp(X,Y,T))))) # label(constant_proper_part_definition).
(all X all Y (cpp(X,Y) <-> (ed(X) & ed(Y) & (exists T1 (pre(Y,T1))) & all T (pre(Y,T) -> (tp(X,Y,T) & -tp(Y,X,T)))))) # label(constant_proper_part_definition). %[Version to help proving the transitivity of cpp]
(all X all Y (cov(X,Y) <-> (ed(X) & ed(Y) & (exists T1 (pre(X,T1) & pre(Y,T1))) & (exists Z (cp(Z,X) & cp(Z,Y))))))  # label(constant_overlap_definition).

(all X all Y all Z (csum(Z,X,Y) <-> (ed(Z) & ed(X) & ed(Y) & (all W all T ((tov(W,Z,T) <-> (tov(W,X,T) | tov(W,Y,T)))))))) # label(temporary_sum_definition_from_Dd26).




%Definitions of constantParticipantOf, constantConstituentOf, constantQualeOf, temporallyLocatedAt


%Constant Participant of

(all X all Y (constantParticipantOf(X,Y) <-> (ed(X) & pd(Y) & exists T (pre(Y,T)) & all T (pre(Y,T) -> pc(X,Y,T))))) # label(definition_constant_participant_of).


%Constant Constituent Of

(all X all Y (constantConstituentOf(X,Y) <-> (((ped(X) & ped(Y)) | (nped(X) & nped(Y)) | (pd(X) & pd(Y))) & exists T (pre(Y,T)) & all T (pre(Y,T) -> k(X,Y,T))))) # label(definition_constant_constituent_of).


%Constant Quale Of

(all X all Y (constantQualeOf(X,Y) <-> (((pr(X) & pq(Y)) | (tr(X) & tq(Y)) | (ar(X) & aq(Y))) & all T (pre(Y,T) -> tql(X,Y,T))))) # label(definition_constant_quale_of).

%Constantly Spatially Located At (omitteed from this version)



%Temporally Located At
%Axioms required beacuse temporallyLocatedAt is not defined in DOLCEsimple (cf. D18: Dd30 - Dd35).

(all X all T (temporallyLocatedAt(X,T) -> ((ed(X) | pd(X) | q(X)) & t(T)))) # label(definition_partial_temporallyLocatedAt_Dd31).
(all X0 all X1 all X2 (temporallyLocatedAt(X0,X1) & temporallyLocatedAt(X0,X2) -> X1 = X2)) # label(definition_unicity_from_Dd31).

(all X (ed(X) -> exists T (temporallyLocatedAt(X,T)))) # label(endurant_temporal_location).
(all X (q(X) -> exists T (temporallyLocatedAt(X,T)))) # label(quality_temporal_location).
(all X (pd(X) -> exists T (temporallyLocatedAt(X,T)))) # label(perdurant_temporal_location).
(all X all T (temporallyLocatedAt(X,T) -> pre(X,T))) # label(temporallyLocatedAt_and_presentAt_partially_Dd40_Ad5).
(all X all Y (tl(X) & ql(Y,X) -> temporallyLocatedAt(X,Y))) # label(temporallyLocatedAt_ql_tl).

(all X all T all T1 ((pre(X,T) & temporallyLocatedAt(X,T1)) -> p(T,T1))) # label(pre_temporallyLocatedAt_Dd40).

%Additions not inlcuded in the OWL2 versions.
%Added definition of pTemporalLocation to enhance OWL expressivity
%(all X0 all X1 (pTemporalLocation(X0,X1) <-> ((X0=X1) & tl(X0)))) # label(pTemporalLocaton_definition).
%Theorem:(all X all Y all Z (temporallyLocatedAt(X,Y) & p(Z,Y) -> pre(X,Z))).

%Added definition of tlDirectQualityOf to enhance OWL expressivity.
%(all X0 all X1 (tlDirectQualityOf(X0,X1) <-> (tl(X0) & dqt(X0,X1)))) # label(tlDirectQualityOf_definition).

end_of_list.



%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

formulas(goals).
%Insert axiom of DOLCEBasic_OWL to prove:



%(all X0 all X1 (cov(X0,X1) -> ed(X0))) # label(axiom16) # label(axiom). %[PROVED, with definition of cov.]
%(all X0 (at(X0) -> ab(X0) | pd(X0))) # label(axiom17) # label(axiom). %[PROVED]
%(all X0 (nped(X0) -> (all X1 (cp(X1,X0) -> nped(X1))))) # label(axiom18) # label(axiom). %[PROVED, with definition of cp.]
%(all X all Y (sd(X,Y) -> thing(X))) # label(axiom20) # label(axiom). %[PROVED]
%(all X all Y (sd(X,Y) -> thing(Y))) # label(axiom21) # label(axiom). %[PROVED]
%(all X0 (pd(X0) -> (all X1 (dqt(X1,X0) -> tq(X1))))) # label(axiom22) # label(axiom). %[PROVED]
%(all X (ab(X) -> thing(X))) # label(axiom23) # label(axiom). %[PROVED]
%(all X0 (pq(X0) -> (all X1 (dqt(X0,X1) -> ped(X1))))) # label(axiom25) # label(axiom). %[PROVED]
%(all X0 all X1 (ov(X0,X1) -> ab(X1) | pd(X1))) # label(axiom26) # label(axiom). %[PROVED]
%(all X0 (pq(X0) -> q(X0))) # label(axiom27) # label(axiom). %[PROVED]
%(all X0 all X1 (temporalPart(X0,X1) -> pd(X0))) # label(axiom28) # label(axiom). %[PROVED]
%(all X all Y (temporallyLocatedAt(X,Y) -> thing(X))) # label(axiom29) # label(axiom). %[PROVED, with definition of temporallyLocatedAt]
%(all X all Y (temporallyLocatedAt(X,Y) -> thing(Y))) # label(axiom30) # label(axiom). %[PROVED, with definition of temporallyLocatedAt]
%(all X0 (pd(X0) -> (exists X1 (dqt(X1,X0) & tl(X1))))) # label(axiom31) # label(axiom). %[PROVED]
%(all X0 (f(X0) -> ped(X0))) # label(axiom32) # label(axiom). %[PROVED]
%(all X0 all X1 (catp(X0,X1) -> cp(X0,X1))) # label(axiom33) # label(axiom). %[PROVED, with definitions of catp, cp]
%(all X0 all X1 ((exists X2 (catp(X0,X2) & pre(X2,X1))) -> pre(X0,X1))).  %[PROVED, with definitions of catp, cp]
%(all X0 -(ab(X0) & pd(X0))) # label(axiom34) # label(axiom). %[PROVED]

%(all X (t(X) -> thing(X))) # label(axiom36) # label(axiom). %[PROVED]
%(all X0 -(ab(X0) & ed(X0))) # label(axiom37) # label(axiom). %[PROVED]
%(all X0 (q(X0) -> (exists X1 (dqt(X0,X1) & pt(X1))))) # label(axiom39) # label(axiom). %[PROVED]
%(all X0 -(pd(X0) & q(X0))) # label(axiom40) # label(axiom). %[PROVED]
%(all X (s(X) -> thing(X))) # label(axiom41) # label(axiom). %[PROVED]
%(all X0 (ar(X0) -> (all X1 (p(X0,X1) -> ar(X1))))) # label(axiom42) # label(axiom). %[PROVED]
%(all X0 all X1 (ql(X0,X1) -> tq(X1))) # label(axiom43) # label(axiom). %[PROVED]
%(all X0 (ab(X0) -> (all X1 (p(X0,X1) -> ab(X1))))) # label(axiom44) # label(axiom). %[PROVED]
%(all X (stv(X) -> thing(X))) # label(axiom45) # label(axiom). %[PROVED]
%(all X0 all X1 (constantConstituentOf(X0,X1) -> nped(X1) | pd(X1) | ped(X1))) # label(axiom46) # label(axiom). %[PROVED, with definition of constantConstituentOf.]
%(all X0 all X1 (atp(X0,X1) -> at(X0))) # label(axiom47) # label(axiom). %[PROVED]
%(all X0 (npob(X0) -> nped(X0))) # label(axiom48) # label(axiom). %[PROVED]
%(all X0 all X1 (constantParticipantOf(X0,X1) -> sd(X1,X0))) # label(axiom49) # label(axiom). %[PROVED, with definition of constantParticipantOf.]
%(all X0 all X1 ((exists X2 (dqt(X2,X0) & pre(X2,X1))) -> pre(X0,X1))) # label(axiom50) # label(axiom). %[PROVED]
%(all X0 all X1 (sd(X0,X1) -> ed(X0) | pd(X0) | q(X0))) # label(axiom51) # label(axiom).  %[PROVED]
%(all X (r(X) -> thing(X))) # label(axiom52) # label(axiom).  %[PROVED]
%(all X0 -(pro(X0) & st(X0))) # label(axiom53) # label(axiom).  %[PROVED]
%(all X (napo(X) -> thing(X))) # label(axiom54) # label(axiom).  %[PROVED]
%(all X0 -(ab(X0) & q(X0))) # label(axiom55) # label(axiom).  %[PROVED]
%(all X0 (acc(X0) -> (exists X1 (temporallyLocatedAt(X0,X1) & -(at(X1)))))) # label(axiom56) # label(axiom). %[PROVED, with defintion of temporallyLocatedAt.]
%(all X0 (pt(X0) <-> ab(X0) | ed(X0) | pd(X0) | q(X0))) # label(axiom57) # label(axiom). %[PROVED]
%(all X1 -(ab(X1) & ed(X1))) # label(axiom58) # label(axiom). %[PROVED]
%(all X2 -(ab(X2) & pd(X2))) # label(axiom59) # label(axiom). %[PROVED]
%(all X3 -(ab(X3) & q(X3))) # label(axiom60) # label(axiom). %[PROVED]
%(all X4 -(ed(X4) & pd(X4))) # label(axiom61) # label(axiom). %[PROVED]
%(all X5 -(ed(X5) & q(X5))) # label(axiom62) # label(axiom). %[PROVED]
%(all X6 -(pd(X6) & q(X6))) # label(axiom63) # label(axiom). %[PROVED]
%(all X0 (pro(X0) -> stv(X0))) # label(axiom64) # label(axiom). %[PROVED]
%(all X0 (pd(X0) -> (all X1 (p(X1,X0) -> pd(X1))))) # label(axiom65) # label(axiom). %[PROVED]
%(all X0 (st(X0) -> stv(X0))) # label(axiom66) # label(axiom). %[PROVED]
%(all X0 (t(X0) -> (all X1 (p(X1,X0) -> t(X1))))) # label(axiom67) # label(axiom). %[PROVED]
%(all X0 (naso(X0) -> sob(X0))) # label(axiom68) # label(axiom). %[PROVED]
%(all X0 (pd(X0) -> (all X1 (constantConstituentOf(X0,X1) -> pd(X1))))) # label(axiom69) # label(axiom).  %[PROVED, with definition of constantConstituentOf.]
%(all X0 (st(X0) -> (all X1 (p(X1,X0) -> st(X1))))) # label(axiom70) # label(axiom). %[PROVED]
%(all X (q(X) -> thing(X))) # label(axiom71) # label(axiom). %[PROVED]
%(all X0 (tr(X0) -> r(X0))) # label(axiom72) # label(axiom). %[PROVED]
%(all X0 all X1 all X2 (dqt(X0,X1) & dqt(X0,X2) -> X1 = X2)) # label(axiom73) # label(axiom). %[PROVED]
%(all X0 (tq(X0) -> (all X1 (dqt(X0,X1) -> pd(X1))))) # label(axiom74) # label(axiom). %[PROVED]
%(all X0 all X1 (p(X0,X1) -> ab(X1) | pd(X1))) # label(axiom75) # label(axiom). %[PROVED]

%(all X0 all X1 ((exists X2 (constantParticipantOf(X0,X2) & pre(X2,X1))) -> pre(X0,X1))) # label(axiom77) # label(axiom). %[PROVED, with definition of constantConstantParticipantOf.]
%(all X (tr(X) -> thing(X))) # label(axiom79) # label(axiom). %[PROVED]
%(all X0 -(f(X0) & pob(X0))) # label(axiom80) # label(axiom). %[PROVED]
%(all X all Y (catp(X,Y) -> thing(X))) # label(axiom81) # label(axiom). %[PROVED, with definition of catp.]
%(all X all Y (catp(X,Y) -> thing(Y))) # label(axiom82) # label(axiom). %[PROVED, with definition of catp.]
%(all X0 (r(X0) <-> ar(X0) | pr(X0) | tr(X0))) # label(axiom83) # label(axiom). %[PROVED]
%(all X1 -(ar(X1) & pr(X1))) # label(axiom84) # label(axiom). %[PROVED]
%(all X2 -(ar(X2) & tr(X2))) # label(axiom85) # label(axiom). %[PROVED]
%(all X3 -(pr(X3) & tr(X3))) # label(axiom86) # label(axiom). %[PROVED]
%(all X (pd(X) -> thing(X))) # label(axiom87) # label(axiom). %[PROVED]
%(all X0 (ab(X0) -> (all X1 (ov(X1,X0) -> ab(X1))))) # label(axiom88) # label(axiom). %[PROVED]
%(all X (st(X) -> thing(X))) # label(axiom89) # label(axiom). %[PROVED]
%(all X (tq(X) -> thing(X))) # label(axiom90) # label(axiom). %[PROVED]
%(all X0 (ab(X0) -> pt(X0))) # label(axiom91) # label(axiom). %[PROVED]
%(all X0 all X1 (catp(X0,X1) -> cat(X0))) # label(axiom92) # label(axiom). %[PROVED, with definition of catp e cat.]
%(all X0 -(nped(X0) & ped(X0))) # label(axiom93) # label(axiom). %[PROVED]
%(all X (cat(X) -> thing(X))) # label(axiom94) # label(axiom). %[PROVED, with definition of cat.]
%(all X0 (pd(X0) -> (all X1 (p(X0,X1) -> pd(X1))))) # label(axiom95) # label(axiom). %[PROVED]
%(all X0 all X1 ((exists X2 (p(X2,X0) & pre(X2,X1))) -> pre(X0,X1))) # label(axiom96) # label(axiom). %[PROVED]
%(all X0 -(ar(X0) & tr(X0))) # label(axiom97) # label(axiom). %[PROVED]
%(all X0 all X1 (dqt(X0,X1) -> q(X0))) # label(axiom98) # label(axiom). %[PROVED]
%(all X0 all X1 (temporallyLocatedAt(X0,X1) -> t(X1))) # label(axiom99) # label(axiom). %[PROVED, with definition of temporallyLocatedAt]
%(all X0 all X1 (pre(X0,X1) -> t(X1))) # label(axiom100) # label(axiom). %[PROVED]
%(all X0 all X1 (p(X0,X1) -> ab(X0) | pd(X0))) # label(axiom101) # label(axiom). %[PROVED]
%(all X0 (acc(X0) -> ev(X0))) # label(axiom102) # label(axiom). %[PROVED]
%(all X0 all X1 (constantQualeOf(X0,X1) -> ar(X0) | pr(X0))) # label(axiom103) # label(axiom). %[PROVED, with definition of constantQualeOf]
%(all X0 -(as(X0) & ped(X0))) # label(axiom104) # label(axiom).  %[PROVED]
%(all X0 all X1 ((exists X2 (sd(X2,X0) & pre(X2,X1))) -> pre(X0,X1))) # label(axiom105) # label(axiom). %[PROVED]
%(all X all Y (constantParticipantOf(X,Y) -> thing(X))) # label(axiom106) # label(axiom). %[PROVED, with definition of constantParticipantOf.]
%(all X all Y (constantParticipantOf(X,Y) -> thing(Y))) # label(axiom107) # label(axiom). %[PROVED, with definition of constantParticipantOf.]
%(all X0 all X1 ((exists X2 (constantConstituentOf(X0,X2) & pre(X2,X1))) -> pre(X0,X1))) # label(axiom108) # label(axiom). %[PROVED, with definition of constantConstituentOf.]
%(all X0 -(aso(X0) & naso(X0))) # label(axiom109) # label(axiom). %[PROVED]
%(all X0 (sob(X0) <-> aso(X0) | naso(X0))) # label(axiom110) # label(axiom). %[PROVED]
%(all X1 -(aso(X1) & naso(X1))) # label(axiom111) # label(axiom). %[PROVED]
%(all X0 (ach(X0) -> (exists X1 (temporallyLocatedAt(X0,X1) & at(X1))))) # label(axiom112) # label(axiom). %[PROVED, with definition of temporallyLocatedAt]
%(all X0 (tl(X0) -> tq(X0))) # label(axiom113) # label(axiom). %[PROVED]
%(all X0 (sag(X0) -> aso(X0))) # label(axiom114) # label(axiom). %[PROVED]
%(all X0 (ped(X0) -> (all X1 (constantConstituentOf(X0,X1) -> ped(X1))))) # label(axiom115) # label(axiom). %[PROVED, with definition of constantConstituentOf]
%(all X0 (nped(X0) -> ed(X0))) # label(axiom116) # label(axiom). %[PROVED]
%(all X0 -(pr(X0) & tr(X0))) # label(axiom117) # label(axiom). %[PROVED]
%(all X (m(X) -> thing(X))) # label(axiom118) # label(axiom). %[PROVED]
%(all X0 (pr(X0) -> (all X1 (constantQualeOf(X0,X1) -> pq(X1))))) # label(axiom119) # label(axiom). %[PROVED, with definition of constantQualeOf.]
%(all X0 all X1 (cov(X0,X1) -> ed(X1))) # label(axiom120) # label(axiom). %[PROVED]
%(all X0 (ped(X0) -> (all X1 (dqt(X1,X0) -> pq(X1))))) # label(axiom121) # label(axiom).  %[PROVED]
%(all X (sag(X) -> thing(X))) # label(axiom122) # label(axiom). %[PROVED]
%(all X (apo(X) -> thing(X))) # label(axiom123) # label(axiom). %[PROVED]
%(all X0 all X1 (constantParticipantOf(X0,X1) -> ed(X0))) # label(axiom124) # label(axiom). %[PROVED, with defintion of constantParticipantOf.]
%(all X0 all X1 (constantQualeOf(X0,X1) -> aq(X1) | pq(X1))) # label(axiom125) # label(axiom). %[PROVED, with definition of constantQualeOf.]
%(all X all Y (p(X,Y) -> thing(X))) # label(axiom126) # label(axiom). %[PROVED]
%(all X all Y (p(X,Y) -> thing(Y))) # label(axiom127) # label(axiom). %[PROVED]
%(all X0 -(acc(X0) & ach(X0))) # label(axiom128) # label(axiom). %[PROVED]
%(all X0 (apo(X0) -> pob(X0))) # label(axiom129) # label(axiom). %[PROVED]
%(all X0 all X1 (cov(X0,X1) -> cov(X1,X0))) # label(axiom130) # label(axiom). %[PROVED, with definition of cov.]
%(all X0 (nped(X0) -> (all X1 (constantConstituentOf(X0,X1) -> nped(X1))))) # label(axiom131) # label(axiom). %[PROVED, with definition of constantConstituentOf.]
%(all X0 (cat(X0) -> -(exists X1 (cpp(X1,X0) & pt(X1) & thing(X0))))) # label(axiom132) # label(axiom).  %[PROVED, with definitions of cat, cpp.]
%(all X0 (pob(X0) -> ped(X0))) # label(axiom133) # label(axiom).   %[PROVED]
%(all X0 -(m(X0) & pob(X0))) # label(axiom134) # label(axiom).  %[PROVED]
%(all X0 (ab(X0) -> (all X1 (ov(X0,X1) -> ab(X1))))) # label(axiom135) # label(axiom).  %[PROVED]
%(all X0 (t(X0) -> (all X1 (p(X0,X1) -> t(X1))))) # label(axiom136) # label(axiom).  %[PROVED]
%(all X (tl(X) -> thing(X))) # label(axiom137) # label(axiom).  %[PROVED]
%(all X (acc(X) -> thing(X))) # label(axiom138) # label(axiom). %[PROVED]
%(all X (at(X) -> thing(X))) # label(axiom139) # label(axiom). %[PROVED]
%(all X0 all X1 all X2 (temporallyLocatedAt(X0,X1) & temporallyLocatedAt(X0,X2) -> X1 = X2)) # label(axiom140) # label(axiom). %[PROVED, with definition of temporallyLocatedAt.]
%(all X all Y (temporalPart(X,Y) -> thing(X))) # label(axiom141) # label(axiom).  %[PROVED]
%(all X all Y (temporalPart(X,Y) -> thing(Y))) # label(axiom142) # label(axiom). %[PROVED]
%(all X0 all X1 (ov(X0,X1) -> ab(X0) | pd(X0))) # label(axiom143) # label(axiom). %[PROVED]
%(all X0 all X1 all X2 (constantConstituentOf(X0,X1) & constantConstituentOf(X1,X2) -> constantConstituentOf(X0,X2))) # label(axiom144) # label(axiom). %[PROVED, with definitino of constantConstituentOf][circa 10 minutes]
%(all X0 all X1 (constantConstituentOf(X0,X1) -> nped(X0) | pd(X0) | ped(X0))) # label(axiom145) # label(axiom). %[PROVED, with definition of constantConstituentOf.]
%(all X (as(X) -> thing(X))) # label(axiom146) # label(axiom). %[PROVED]
%(all X (pro(X) -> thing(X))) # label(axiom147) # label(axiom). %[PROVED]
%(all X all Y (cp(X,Y) -> thing(X))) # label(axiom148) # label(axiom). %[PROVED, with definition of cp.]
%(all X all Y (cp(X,Y) -> thing(Y))) # label(axiom149) # label(axiom). %[PROVED, with definition of cp.]
%(all X (mob(X) -> thing(X))) # label(axiom150) # label(axiom). %[PROVED]
%(all X0 all X1 (dqt(X0,X1) -> sd(X0,X1))) # label(axiom152) # label(axiom). %[PROVED]
%(all X0 -(ed(X0) & q(X0))) # label(axiom153) # label(axiom). %[PROVED]
%(all X0 all X1 (temporalPart(X0,X1) -> p(X0,X1))) # label(axiom154) # label(axiom). %[PROVED]
%(all X0 (q(X0) <-> aq(X0) | pq(X0) | tq(X0))) # label(axiom155) # label(axiom). %[PROVED]
%(all X1 -(aq(X1) & pq(X1))) # label(axiom156) # label(axiom). %[PROVED]
%(all X2 -(aq(X2) & tq(X2))) # label(axiom157) # label(axiom). %[PROVED]
%(all X3 -(pq(X3) & tq(X3))) # label(axiom158) # label(axiom). %[PROVED]
%(all X (ar(X) -> thing(X))) # label(axiom159) # label(axiom).%[PROVED]
%(all X0 (s(X0) -> (all X1 (p(X0,X1) -> s(X1))))) # label(axiom160) # label(axiom). %[PROVED]
%(all X0 (ed(X0) -> pt(X0))) # label(axiom161) # label(axiom). %[PROVED]
%(all X (ped(X) -> thing(X))) # label(axiom162) # label(axiom). %[PROVED]
%(all X0 all X1 ((exists X2 (pre(X0,X2) & p(X1,X2))) -> pre(X0,X1))) # label(axiom163) # label(axiom). %[PROVED]
%(all X (aq(X) -> thing(X))) # label(axiom164) # label(axiom). %[PROVED]
%(all X (ed(X) -> thing(X))) # label(axiom165) # label(axiom). %[PROVED]
%(all X0 (mob(X0) -> (exists X1 (sd(X0,X1) & apo(X1))))) # label(axiom166) # label(axiom). %[PROVED]
%(all X0 all X1 (atp(X0,X1) -> p(X0,X1))) # label(axiom167) # label(axiom). %[PROVED]
%(all X0 all X1 (pp(X0,X1) -> ab(X0) | pd(X0))) # label(axiom168) # label(axiom). %[PROVED]
%(all X0 all X1 (constantConstituentOf(X0,X1) -> sd(X1,X0))) # label(axiom169) # label(axiom). %[PROVED, with definition of constantConstituentOf]
%(all X0 -(pq(X0) & tq(X0))) # label(axiom171) # label(axiom). %[PROVED]
%(all X0 (pob(X0) <-> apo(X0) | napo(X0))) # label(axiom172) # label(axiom). %[PROVED]
%(all X1 -(apo(X1) & napo(X1))) # label(axiom173) # label(axiom). %[PROVED]
%(all X0 (ev(X0) -> pd(X0))) # label(axiom174) # label(axiom). %[PROVED]
%(all X0 all X1 (ov(X0,X1) -> ov(X1,X0))) # label(axiom175) # label(axiom). %[PROVED]
%(all X0 all X1 (cp(X0,X1) -> ed(X0))) # label(axiom176) # label(axiom). %[PROVED, with definition of cp.]
%(all X0 all X1 (cpp(X0,X1) -> cp(X0,X1))) # label(axiom177) # label(axiom). %[PROVED, with definition of cpp.]
%(all X (naso(X) -> thing(X))) # label(axiom178) # label(axiom). %[PROVED]
%(all X (sl(X) -> thing(X))) # label(axiom179) # label(axiom). %[PROVED]
%(all X0 (s(X0) -> (all X1 (p(X1,X0) -> s(X1))))) # label(axiom180) # label(axiom).  %[PROVED]
%(all X (ach(X) -> thing(X))) # label(axiom181) # label(axiom). %[PROVED]
%(all X0 (tl(X0) -> (exists X1 (ql(X1,X0) & t(X1))))) # label(axiom182) # label(axiom). %[PROVED]
%(all X0 (ped(X0) -> (all X1 (constantConstituentOf(X1,X0) -> ped(X1))))) # label(axiom183) # label(axiom). %[PROVED, with definition of constantConstituentOf.]
%(all X0 -(mob(X0) & sob(X0))) # label(axiom184) # label(axiom). %[PROVED]
%(all X0 all X1 (constantParticipantOf(X0,X1) -> pd(X1))) # label(axiom185) # label(axiom). %[PROVED, with definition of constantParticipantOf.]
%(all X (f(X) -> thing(X))) # label(axiom186) # label(axiom). %[PROVED]
%(all X0 (t(X0) -> tr(X0))) # label(axiom187) # label(axiom). %[PROVED]
%(all X0 (at(X0) -> pt(X0))) # label(axiom188) # label(axiom). %[PROVED]
%(all X (npob(X) -> thing(X))) # label(axiom189) # label(axiom). %[PROVED]
%(all X0 (nped(X0) -> (all X1 (dqt(X1,X0) -> aq(X1))))) # label(axiom190) # label(axiom). %[PROVED]
%(all X0 (ar(X0) -> r(X0))) # label(axiom191) # label(axiom). %[PROVED]
%(all X (pt(X) -> thing(X))) # label(axiom192) # label(axiom). %[PROVED]
%(all X0 (aq(X0) -> q(X0))) # label(axiom193) # label(axiom). %[PROVED]
%(all X0 all X1 all X2 (cpp(X0,X1) & cpp(X1,X2) -> cpp(X0,X2))) # label(axiom194) # label(axiom). %[PROVED, with definition of cpp]
%(all X0 (ar(X0) -> (all X1 (p(X1,X0) -> ar(X1))))) # label(axiom195) # label(axiom). %[PROVED]
%(all X0 (pd(X0) -> (all X1 (ov(X0,X1) -> pd(X1))))) # label(axiom196) # label(axiom). %[PROVED]
%(all X0 all X1 ((all X2 (cp(X2,X0) & cp(X2,X1))) -> cov(X0,X1))) # label(axiom197) # label(axiom). %[PROVED, with definition of cp, cov]
%(all X (pob(X) -> thing(X))) # label(axiom198) # label(axiom). %[PROVED]
%(all X0 (m(X0) -> ped(X0))) # label(axiom199) # label(axiom). %[PROVED]
%(all X0 (ed(X0) <-> as(X0) | nped(X0) | ped(X0))) # label(axiom200) # label(axiom). %[PROVED]
%(all X1 -(as(X1) & nped(X1))) # label(axiom201) # label(axiom). %[PROVED]
%(all X2 -(as(X2) & ped(X2))) # label(axiom202) # label(axiom). %[PROVED]
%(all X3 -(nped(X3) & ped(X3))) # label(axiom203) # label(axiom). %[PROVED]
%(all X (pr(X) -> thing(X))) # label(axiom204) # label(axiom). %[PROVED]
%(all X0 all X1 (catp(X0,X1) -> ed(X1))) # label(axiom205) # label(axiom). %[PROVED, with definition of catp.]
%(all X0 (sl(X0) -> pq(X0))) # label(axiom206) # label(axiom). %[PROVED]
%(all X0 all X1 (temporallyLocatedAt(X0,X1) -> ed(X0) | pd(X0) | q(X0))) # label(axiom207) # label(axiom). %[PROVED]
%(all X0 all X1 ((exists X2 (cp(X0,X2) & pre(X2,X1))) -> pre(X0,X1))) # label(axiom208) # label(axiom). %[PROVED, with definition of cp.]
%(all X0 (as(X0) -> ed(X0))) # label(axiom209) # label(axiom). %[PROVED]
%(all X0 all X1 all X2 (sd(X0,X1) & sd(X1,X2) -> sd(X0,X2))) # label(axiom210) # label(axiom). %[PROVED]
%(all X0 -(as(X0) & nped(X0))) # label(axiom211) # label(axiom).%[PROVED]
%(all X (pq(X) -> thing(X))) # label(axiom212) # label(axiom). %[PROVED]
%(all X0 all X1 (temporallyLocatedAt(X0,X1) -> pre(X0,X1))) # label(axiom213) # label(axiom). %[PROVED, with definition of temporallyLocatedAt-]
%(all X0 all X1 (cpp(X0,X1) -> ed(X0))) # label(axiom214) # label(axiom). %[PROVED, with definition of cpp.]
%(all X0 (s(X0) -> (all X1 (constantQualeOf(X0,X1) -> sl(X1))))) # label(axiom215) # label(axiom). %[PROVED, with definition of constantQualeOf.]
%(all X all Y (cpp(X,Y) -> thing(X))) # label(axiom216) # label(axiom). %[PROVED, with definition of cpp.]
%(all X all Y (cpp(X,Y) -> thing(Y))) # label(axiom217) # label(axiom). %[PROVED, with definition of cpp.]
%(all X0 -(ev(X0) & stv(X0))) # label(axiom218) # label(axiom). %[PROVED]
%(all X0 all X1 ((exists X2 (cpp(X0,X2) & pre(X2,X1))) -> pre(X0,X1))) # label(axiom219) # label(axiom). %[PROVED, with definition of cpp.]
%(all X all Y (dqt(X,Y) -> thing(X))) # label(axiom220) # label(axiom). %[PROVED]
%(all X all Y (dqt(X,Y) -> thing(Y))) # label(axiom221) # label(axiom). %[PROVED]
%(all X0 all X1 all X2 (pp(X0,X1) & pp(X1,X2) -> pp(X0,X2))) # label(axiom222) # label(axiom). %[PROVED]
%(all X all Y (atp(X,Y) -> thing(X))) # label(axiom223) # label(axiom). %[PROVED]
%(all X all Y (atp(X,Y) -> thing(Y))) # label(axiom224) # label(axiom). %[PROVED]
%(all X0 (tq(X0) -> (exists X1 (ql(X1,X0) & pt(X1))))) # label(axiom225) # label(axiom). %[PROVED]
%(all X0 all X1 (pp(X0,X1) -> ab(X1) | pd(X1))) # label(axiom226) # label(axiom). %[PROVED]
%(all X0 (s(X0) -> pr(X0))) # label(axiom227) # label(axiom). %[PROVED]
%(all X0 -(ar(X0) & pr(X0))) # label(axiom228) # label(axiom). %[PROVED]
%(all X0 (ped(X0) -> (exists X1 (dqt(X1,X0) & sl(X1))))) # label(axiom229) # label(axiom). %[PROVED]
%(all X all Y (constantConstituentOf(X,Y) -> thing(X))) # label(axiom230) # label(axiom). %[PROVED, with definition of constantConstituentOf.]
%(all X all Y (constantConstituentOf(X,Y) -> thing(Y))) # label(axiom231) # label(axiom). %[PROVED, with definition of constantConstituentOf.]
%(all X0 all X1 (p(X0,X1) -> ov(X0,X1))) # label(axiom232) # label(axiom). %[PROVED]
%(all X0 all X1 (temporalPart(X0,X1) -> pd(X1))) # label(axiom233) # label(axiom). %[PROVED]
%(all X0 (sc(X0) -> aso(X0))) # label(axiom234) # label(axiom). %[PROVED]
%(all X0 (aso(X0) -> sob(X0))) # label(axiom235) # label(axiom). %[PROVED]
%(all X0 (ped(X0) -> (all X1 (cp(X1,X0) -> ped(X1))))) # label(axiom236) # label(axiom). %[PROVED, with definition of cp.]
%(all X0 (mob(X0) -> npob(X0))) # label(axiom237) # label(axiom). %[PROVED]
%(all X0 all X1 ((exists X2 (temporallyLocatedAt(X0,X2) & p(X1,X2))) -> pre(X0,X1))) # label(axiom238) # label(axiom). %[PROVED, with definition of temporallyLocatedAt.]
%(all X0 (aq(X0) -> (all X1 (constantQualeOf(X1,X0) -> ar(X1))))) # label(axiom239) # label(axiom). %[PROVED, with definition of constantQualeOf.]
%(all X (aso(X) -> thing(X))) # label(axiom240) # label(axiom).  %[PROVED]
%(all X0 all X1 (cp(X0,X1) -> cov(X0,X1))) # label(axiom241) # label(axiom).  %[PROVED, with definition of cp, cov]
%(all X0 (ar(X0) -> (all X1 (constantQualeOf(X0,X1) -> aq(X1))))) # label(axiom242) # label(axiom). %[PROVED, with definition of constantQualeOf.]
%(all X0 all X1 all X2 (p(X0,X1) & p(X1,X2) -> p(X0,X2))) # label(axiom243) # label(axiom). %[PROVED]
%(all X0 -(f(X0) & m(X0))) # label(axiom244) # label(axiom). %[PROVED]
%(all X all Y (cov(X,Y) -> thing(X))) # label(axiom245) # label(axiom). %[PROVED, with definition of cov.]
%(all X all Y (cov(X,Y) -> thing(Y))) # label(axiom246) # label(axiom). %[PROVED, with definition of cov.]
%(all X0 (at(X0) -> -(exists X1 (pp(X1,X0))))) # label(axiom247) # label(axiom). %[PROVED]
%(all X0 all X1 (atp(X0,X1) -> ab(X1) | pd(X1))) # label(axiom248) # label(axiom). %[PROVED]
%(all X0 (ed(X0) -> (exists X1 (temporallyLocatedAt(X0,X1) & t(X1))))) # label(axiom249) # label(axiom). %[PROVED, with definition of temporallyLocatedAt]
%(all X0 all X1 all X2 (cp(X0,X1) & cp(X1,X2) -> cp(X0,X2))) # label(axiom250) # label(axiom). %[PROVED, with definition of cp.]
%(all X all Y (ov(X,Y) -> thing(X))) # label(axiom251) # label(axiom). %[PROVED]
%(all X all Y (ov(X,Y) -> thing(Y))) # label(axiom252) # label(axiom). %[PROVED]
%(all X0 -(ed(X0) & pd(X0))) # label(axiom255) # label(axiom). %[PROVED]
%(all X0 all X1 (ql(X0,X1) -> tr(X0))) # label(axiom256) # label(axiom). %[PROVED]
%(all X0 all X1 all X2 (temporalPart(X0,X1) & temporalPart(X1,X2) -> temporalPart(X0,X2))) # label(axiom257) # label(axiom). %[PROVED]
%(all X0 all X1 (sd(X0,X1) -> ed(X1) | pd(X1) | q(X1))) # label(axiom258) # label(axiom). %[PROVED]
%(all X0 all X1 (cpp(X0,X1) -> ed(X1))) # label(axiom259) # label(axiom). %[PROVED, with definition of cpp.]
%(all X0 all X1 (pre(X0,X1) -> ed(X0) | pd(X0) | q(X0))) # label(axiom260) # label(axiom). %[PROVED]
%(all X0 (cat(X0) -> ed(X0))) # label(axiom261) # label(axiom). %[PROVED, with definition of cap.]
%(all X0 (pr(X0) -> r(X0))) # label(axiom262) # label(axiom). %[PROVED]
%(all X (sc(X) -> thing(X))) # label(axiom263) # label(axiom). %[PROVED]
%(all X (ev(X) -> thing(X))) # label(axiom264) # label(axiom). %[PROVED]
%(all X (sob(X) -> thing(X))) # label(axiom265) # label(axiom). %[PROVED]
%(all X0 (q(X0) -> pt(X0))) # label(axiom266) # label(axiom). %[PROVED]
%(all X0 (pd(X0) -> (exists X1 (temporallyLocatedAt(X0,X1) & t(X1))))) # label(axiom267) # label(axiom). %[PROVED, with definition of temporallyLocatedAt]
%(all X all Y (constantQualeOf(X,Y) -> thing(X))) # label(axiom268) # label(axiom). %[PROVED, with definition of constantQualeOf.]
%(all X all Y (constantQualeOf(X,Y) -> thing(Y))) # label(axiom269) # label(axiom). %[PROVED, with definition of constantQualeOf.]
%(all X0 all X1 ((exists X2 (p(X2,X0) & p(X2,X1))) -> ov(X0,X1))) # label(axiom270) # label(axiom). %[PROVED]
%(all X0 all X1 (pp(X0,X1) -> p(X0,X1))) # label(axiom271) # label(axiom). %[PROVED]
%(all X0 (pd(X0) -> pt(X0))) # label(axiom272) # label(axiom). %[PROVED]
%(all X0 (pq(X0) -> (all X1 (constantQualeOf(X1,X0) -> pr(X1))))) # label(axiom273) # label(axiom). %[PROVED, with definition of constantQualeOf.]
%(all X0 (ped(X0) -> ed(X0))) # label(axiom274) # label(axiom). %[PROVED]
%(all X0 (stv(X0) -> pd(X0))) # label(axiom275) # label(axiom). %[PROVED]
%(all X all Y (pp(X,Y) -> thing(X))) # label(axiom276) # label(axiom). %[PROVED]
%(all X all Y (pp(X,Y) -> thing(Y))) # label(axiom277) # label(axiom). %[PROVED]
%(all X0 -(sag(X0) & sc(X0))) # label(axiom278) # label(axiom). %[PROVED]
%(all X0 (pd(X0) -> (all X1 (constantConstituentOf(X1,X0) -> pd(X1))))) # label(axiom279) # label(axiom). %[PROVED, with definition of constantConstituentOf.]
%(all X0 (napo(X0) -> pob(X0))) # label(axiom280) # label(axiom). %[PROVED]
%(all X0 (nped(X0) -> (all X1 (constantConstituentOf(X1,X0) -> nped(X1))))) # label(axiom281) # label(axiom). %[PROVED, with definition of constantConstituentOf.]
%(all X0 all X1 (cp(X0,X1) -> ed(X1))) # label(axiom282) # label(axiom). %[PROVED, with definition of cp.]
%(all X0 (pd(X0) -> (all X1 (ov(X1,X0) -> pd(X1))))) # label(axiom283) # label(axiom). %[PROVED]
%(all X0 (r(X0) -> ab(X0))) # label(axiom284) # label(axiom). %[PROVED]
%(all X0 (tq(X0) -> q(X0))) # label(axiom285) # label(axiom). %[PROVED]
%(all X0 -(aq(X0) & pq(X0))) # label(axiom286) # label(axiom). %[PROVED]
%(all X0 (aq(X0) -> (all X1 (dqt(X0,X1) -> nped(X1))))) # label(axiom287) # label(axiom). %[PROVED]
%(all X0 (ach(X0) -> ev(X0))) # label(axiom288) # label(axiom). %[PROVED]
%(all X all Y (ql(X,Y) -> thing(X))) # label(axiom289) # label(axiom). %[PROVED]
%(all X all Y (ql(X,Y) -> thing(Y))) # label(axiom290) # label(axiom). %[PROVED]
%(all X0 (q(X0) -> (exists X1 (temporallyLocatedAt(X0,X1) & t(X1))))) # label(axiom291) # label(axiom). %[PROVED, with definition of temporallyLocatedAt]NO: CHECK
%(all X (nped(X) -> thing(X))) # label(axiom292) # label(axiom). %[PROVED]
%(all X0 (ab(X0) -> (all X1 (p(X1,X0) -> ab(X1))))) # label(axiom293) # label(axiom). %[PROVED]
%(all X0 all X1 (dqt(X0,X1) -> ed(X1) | pd(X1))) # label(axiom295) # label(axiom). %[PROVED]
%(all X0 -(aq(X0) & tq(X0))) # label(axiom296) # label(axiom). %[PROVED]
%(all X0 (sob(X0) -> npob(X0))) # label(axiom297) # label(a.xiom). %[PROVED]
%(all X all Y (pre(X,Y) -> thing(X))) # label(axiom298) # label(axiom). %[PROVED]
%(all X all Y (pre(X,Y) -> thing(Y))) # label(axiom299) # label(axiom). %[PROVED]

%Proved by PROVER9 in FOL but not present DOLCEBasic_OWL because of problems with the OWL2 reasoners (Pellet).

%(all T all T1 (exists X exists Y (temporallyLocatedAt(X,T) & cov(X,Y) & temporallyLocatedAt(Y,T1)) -> ov(T,T1))). %[PROVED, with definition of temporallyLocatedAt]
%(all X0 all X1( exists X2 (pre(X2,X0) & temporallyLocatedAt(X2,X1) -> p(X2,X1)))). %[PROVED, with definition of temporallyLocatedAt]
%(all X0 all X1 all X2 (ql(X1,X0) & ql(X2,X0) -> X1 = X2)).  %[PROVED]
%(all T all T1 (exists X ((pre(X,T1) & temporallyLocatedAt(X,T1)) -> ov(T,T1)))). %[PROVED]
%(all X0 all X1 ((exists X2 (pre(X2,X0) & temporallyLocatedAt(X2,X1))) -> p(X0,X1))). %[PROVED, with definition of temporallyLocatedAt]



end_of_list.
