Prefix(:=<http://www.loa.istc.cnr.it/dolce/dolce-owl/DOLCE#>)
Prefix(owl:=<http://www.w3.org/2002/07/owl#>)
Prefix(rdf:=<http://www.w3.org/1999/02/22-rdf-syntax-ns#>)
Prefix(xml:=<http://www.w3.org/XML/1998/namespace>)
Prefix(xsd:=<http://www.w3.org/2001/XMLSchema#>)
Prefix(rdfs:=<http://www.w3.org/2000/01/rdf-schema#>)


Ontology(<http://www.loa.istc.cnr.it/dolce/dolce-owl/DOLCE>
Annotation(rdfs:comment "DOLCE in OWL. OWL version engineered by Laure Vieu and Daniele Porello, based on Dolce Simple in CASL by Till Mossakowski and Claudio Masolo. Reference to axioms of DOLCE from Wonderweb Deliverable D18."^^xsd:string)

Declaration(Class(:AB))
Declaration(Class(:ACC))
Declaration(Class(:ACH))
Declaration(Class(:APO))
Declaration(Class(:AQ))
Declaration(Class(:AR))
Declaration(Class(:AS))
Declaration(Class(:ASO))
Declaration(Class(:AT))
Declaration(Class(:ATP-t))
Declaration(Class(:CAT))
Declaration(Class(:CSUM))
Declaration(Class(:ED))
Declaration(Class(:EV))
Declaration(Class(:F))
Declaration(Class(:K-t))
Declaration(Class(:KNPED-t))
Declaration(Class(:KPD-t))
Declaration(Class(:KPED-t))
Declaration(Class(:M))
Declaration(Class(:MOB))
Declaration(Class(:NAPO))
Declaration(Class(:NASO))
Declaration(Class(:NPED))
Declaration(Class(:NPOB))
Declaration(Class(:OV-t))
Declaration(Class(:P-t))
Declaration(Class(:PC-t))
Declaration(Class(:PD))
Declaration(Class(:PED))
Declaration(Class(:POB))
Declaration(Class(:PP-t))
Declaration(Class(:PQ))
Declaration(Class(:PR))
Declaration(Class(:PRO))
Declaration(Class(:PT))
Declaration(Class(:Q))
Declaration(Class(:QL-AR-AQ-t))
Declaration(Class(:QL-PR-PQ-t))
Declaration(Class(:QL-t))
Declaration(Class(:R))
Declaration(Class(:RELN))
Declaration(Class(:S))
Declaration(Class(:SAG))
Declaration(Class(:SC))
Declaration(Class(:SL))
Declaration(Class(:SOB))
Declaration(Class(:ST))
Declaration(Class(:STV))
Declaration(Class(:SUM))
Declaration(Class(:SUM-t))
Declaration(Class(:SUMAB))
Declaration(Class(:SUMPD))
Declaration(Class(:T))
Declaration(Class(:TL))
Declaration(Class(:TQ))
Declaration(Class(:TR))
Declaration(ObjectProperty(:atP))
Declaration(ObjectProperty(:cAtP))
Declaration(ObjectProperty(:cOv))
Declaration(ObjectProperty(:cP))
Declaration(ObjectProperty(:cPP))
Declaration(ObjectProperty(:csum1))
Declaration(ObjectProperty(:csum2))
Declaration(ObjectProperty(:csum3))
Declaration(ObjectProperty(:dQt))
Declaration(ObjectProperty(:ov))
Declaration(ObjectProperty(:p))
Declaration(ObjectProperty(:pP))
Declaration(ObjectProperty(:pT))
Declaration(ObjectProperty(:pre))
Declaration(ObjectProperty(:ql))
Declaration(ObjectProperty(:sD))
Declaration(ObjectProperty(:sumAB1))
Declaration(ObjectProperty(:sumAB2))
Declaration(ObjectProperty(:sumAB3))
Declaration(ObjectProperty(:sumPD1))
Declaration(ObjectProperty(:sumPD2))
Declaration(ObjectProperty(:sumPD3))
Declaration(ObjectProperty(:tAt))
Declaration(ObjectProperty(:tAtP1))
Declaration(ObjectProperty(:tAtP2))
Declaration(ObjectProperty(:tAtPt))
Declaration(ObjectProperty(:tKNPED1))
Declaration(ObjectProperty(:tKNPED2))
Declaration(ObjectProperty(:tKNPEDt))
Declaration(ObjectProperty(:tKPD1))
Declaration(ObjectProperty(:tKPD2))
Declaration(ObjectProperty(:tKPDt))
Declaration(ObjectProperty(:tKPED1))
Declaration(ObjectProperty(:tKPED2))
Declaration(ObjectProperty(:tKPEDt))
Declaration(ObjectProperty(:tOv1))
Declaration(ObjectProperty(:tOv2))
Declaration(ObjectProperty(:tOvt))
Declaration(ObjectProperty(:tP1))
Declaration(ObjectProperty(:tP2))
Declaration(ObjectProperty(:tPC1))
Declaration(ObjectProperty(:tPC2))
Declaration(ObjectProperty(:tPCt))
Declaration(ObjectProperty(:tPP1))
Declaration(ObjectProperty(:tPP2))
Declaration(ObjectProperty(:tPPt))
Declaration(ObjectProperty(:tPt))
Declaration(ObjectProperty(:tQl-AR-AQ1))
Declaration(ObjectProperty(:tQl-AR-AQ2))
Declaration(ObjectProperty(:tQl-AR-AQt))
Declaration(ObjectProperty(:tQl-PR-PQ1))
Declaration(ObjectProperty(:tQl-PR-PQ2))
Declaration(ObjectProperty(:tQl-PR-PQt))
Declaration(ObjectProperty(:tSum1))
Declaration(ObjectProperty(:tSum2))
Declaration(ObjectProperty(:tSum3))
Declaration(ObjectProperty(:tSumt))

############################
#   Object Properties
############################

# Object Property: :atP (:atP)

AnnotationAssertion(rdfs:comment :atP "atomic part")
SubObjectPropertyOf(Annotation(rdfs:comment "Dd17 (half)") :atP :p)
ObjectPropertyDomain(Annotation(rdfs:comment "Dd17 (half)") :atP :AT)

# Object Property: :cAtP (:cAtP)

AnnotationAssertion(rdfs:comment :cAtP "constant atomic part")
SubObjectPropertyOf(:cAtP :cP)
ObjectPropertyDomain(:cAtP :CAT)
ObjectPropertyDomain(Annotation(rdfs:comment "inferred from Dd25") :cAtP ObjectSomeValuesFrom(:pre :T))
ObjectPropertyRange(:cAtP :ED)
ObjectPropertyRange(Annotation(rdfs:comment "inferred from Dd25") :cAtP ObjectSomeValuesFrom(:pre :T))

# Object Property: :cOv (:cOv)

AnnotationAssertion(rdfs:comment :cOv "constant overlap")
SymmetricObjectProperty(:cOv)
ObjectPropertyDomain(:cOv :ED)
ObjectPropertyDomain(Annotation(rdfs:comment "inferred from Dd25") :cOv ObjectSomeValuesFrom(:pre :T))
ObjectPropertyRange(:cOv :ED)
ObjectPropertyRange(Annotation(rdfs:comment "inferred from Dd25") :cOv ObjectSomeValuesFrom(:pre :T))

# Object Property: :cP (:cP)

AnnotationAssertion(rdfs:comment :cP "constant part")
SubObjectPropertyOf(:cP :cOv)
TransitiveObjectProperty(:cP)
ObjectPropertyDomain(Annotation(rdfs:comment "From Dd25, Ad10") :cP :ED)
ObjectPropertyDomain(Annotation(rdfs:comment "inferred from Dd25") :cP ObjectSomeValuesFrom(:pre :T))
ObjectPropertyRange(Annotation(rdfs:comment "From Dd25, Ad10") :cP :ED)
ObjectPropertyRange(Annotation(rdfs:comment "Dd25 (half)") :cP ObjectSomeValuesFrom(:pre :T))

# Object Property: :cPP (:cPP)

AnnotationAssertion(rdfs:comment :cPP "constant proper part")
SubObjectPropertyOf(:cPP :cP)
TransitiveObjectProperty(:cPP)
ObjectPropertyDomain(:cPP :ED)
ObjectPropertyDomain(Annotation(rdfs:comment "inferred from Dd25") :cPP ObjectSomeValuesFrom(:pre :T))
ObjectPropertyRange(:cPP :ED)
ObjectPropertyRange(Annotation(rdfs:comment "inferred from Dd25") :cPP ObjectSomeValuesFrom(:pre :T))

# Object Property: :csum1 (:csum1)

AnnotationAssertion(rdfs:comment :csum1 "first argument of the constant sum relation, this is the sum of the second and the third argument")
AnnotationAssertion(rdfs:comment :csum1 "see Dd26")
FunctionalObjectProperty(:csum1)
ObjectPropertyDomain(:csum1 :CSUM)
ObjectPropertyRange(:csum1 :ED)
ObjectPropertyRange(Annotation(rdfs:comment "inferred from Dd25") :csum1 ObjectSomeValuesFrom(:pre :T))

# Object Property: :csum2 (:csum2)

AnnotationAssertion(rdfs:comment :csum2 "second argument of the constant sum relation")
AnnotationAssertion(rdfs:comment :csum2 "see Dd26")
FunctionalObjectProperty(:csum2)
ObjectPropertyDomain(:csum2 :CSUM)
ObjectPropertyRange(:csum2 :ED)
ObjectPropertyRange(Annotation(rdfs:comment "inferred from Dd25") :csum2 ObjectSomeValuesFrom(:pre :T))

# Object Property: :csum3 (:csum3)

AnnotationAssertion(rdfs:comment :csum3 "see Dd26")
AnnotationAssertion(rdfs:comment :csum3 "third argument of the constant sum relation")
FunctionalObjectProperty(:csum3)
ObjectPropertyDomain(:csum3 :CSUM)
ObjectPropertyRange(:csum3 :ED)
ObjectPropertyRange(Annotation(rdfs:comment "inferred from Dd25") :csum3 ObjectSomeValuesFrom(:pre :T))

# Object Property: :dQt (:dQt)

AnnotationAssertion(rdfs:comment :dQt "Functionality: Ad43")
AnnotationAssertion(rdfs:comment :dQt "direct quality")
FunctionalObjectProperty(:dQt)
ObjectPropertyDomain(Annotation(rdfs:comment "Dd28, Ad38") :dQt :Q)
ObjectPropertyRange(Annotation(rdfs:comment "From Dd28, Ad38, Ad43, Ad46, Ad47, Ad48") :dQt ObjectUnionOf(:ED :PD))

# Object Property: :ov (:ov)

AnnotationAssertion(rdfs:comment :ov "overlap")
SymmetricObjectProperty(:ov)
ObjectPropertyDomain(Annotation(rdfs:comment "From Ad1 and Dd15") :ov ObjectUnionOf(:AB :PD))
ObjectPropertyRange(Annotation(rdfs:comment "From Ad1 and Dd15") :ov ObjectUnionOf(:AB :PD))

# Object Property: :p (:p)

AnnotationAssertion(rdfs:comment :p "part")
SubObjectPropertyOf(Annotation(rdfs:comment "From Ad5 and Dd15") :p :ov)
TransitiveObjectProperty(:p)
ObjectPropertyDomain(Annotation(rdfs:comment "Ad1 (half)") :p ObjectUnionOf(:AB :PD))
ObjectPropertyRange(Annotation(rdfs:comment "Ad1 (half)") :p ObjectUnionOf(:AB :PD))

# Object Property: :pP (:pP)

AnnotationAssertion(rdfs:comment :pP "proper part")
SubObjectPropertyOf(Annotation(rdfs:comment "D14 (half)
irreflexivity impossible (property implies domain=Thing, and use of Self incompatible with transitivity)") :pP :p)
TransitiveObjectProperty(:pP)

# Object Property: :pT (:pT)

AnnotationAssertion(rdfs:comment :pT "temporal part")
SubObjectPropertyOf(Annotation(rdfs:comment "Dd54 (third)") :pT :p)
TransitiveObjectProperty(:pT)
ObjectPropertyDomain(Annotation(rdfs:comment "Dd54 (third)") :pT :PD)
ObjectPropertyRange(Annotation(rdfs:comment "From Dd54 and Ad2") :pT :PD)

# Object Property: :pre (:pre)

AnnotationAssertion(rdfs:comment :pre "present at")
ObjectPropertyDomain(Annotation(rdfs:comment "From Dd40, Dd30, Dd31, Dd32, Dd33") :pre ObjectUnionOf(:ED :PD :Q))
ObjectPropertyRange(Annotation(rdfs:comment "From Dd40, Dd30, Dd31, Dd32, Dd33") :pre :T)

# Object Property: :ql (:ql)

AnnotationAssertion(rdfs:comment :ql "quale of (for temporal qualities)")
InverseFunctionalObjectProperty(:ql)
ObjectPropertyDomain(Annotation(rdfs:comment "Ad52") :ql :TR)
ObjectPropertyRange(Annotation(rdfs:comment "Ad52") :ql :TQ)

# Object Property: :sD (:sD)

AnnotationAssertion(rdfs:comment :sD "Specific constant dependence")
ObjectPropertyDomain(Annotation(rdfs:comment "From Dd69") :sD ObjectUnionOf(:ED :PD :Q))
ObjectPropertyDomain(Annotation(rdfs:comment "Dd69") :sD ObjectSomeValuesFrom(:pre :T))
ObjectPropertyRange(Annotation(rdfs:comment "From Dd69") :sD ObjectUnionOf(:ED :PD :Q))
ObjectPropertyRange(Annotation(rdfs:comment "Dd69") :sD ObjectSomeValuesFrom(:pre :T))

# Object Property: :sumAB1 (:sumAB1)

AnnotationAssertion(rdfs:comment :sumAB1 "first argument of the sum relation (restricted to AB), this is the sum of the second and the third argument")
FunctionalObjectProperty(:sumAB1)
ObjectPropertyDomain(:sumAB1 :SUMAB)
ObjectPropertyRange(Annotation(rdfs:comment "From Dd18, Dd15 and Ad3") :sumAB1 :AB)

# Object Property: :sumAB2 (:sumAB2)

AnnotationAssertion(rdfs:comment :sumAB2 "second argument of the sum relation (restricted to AB)")
FunctionalObjectProperty(:sumAB2)
ObjectPropertyDomain(:sumAB2 :SUMAB)
ObjectPropertyRange(Annotation(rdfs:comment "From Dd18, Dd15 and Ad3") :sumAB2 :AB)

# Object Property: :sumAB3 (:sumAB3)

AnnotationAssertion(rdfs:comment :sumAB3 "third argument of the sum relation (restricted to AB)")
FunctionalObjectProperty(:sumAB3)
ObjectPropertyDomain(:sumAB3 :SUMAB)
ObjectPropertyRange(Annotation(rdfs:comment "From Dd18, Dd15 and Ad3") :sumAB3 :AB)

# Object Property: :sumPD1 (:sumPD1)

AnnotationAssertion(rdfs:comment :sumPD1 "first argument of the sum relation (restricted to PD), this is the sum of the second and the third argument")
FunctionalObjectProperty(:sumPD1)
ObjectPropertyDomain(:sumPD1 :SUMPD)
ObjectPropertyRange(Annotation(rdfs:comment "From Dd18, Dd15 and Ad2") :sumPD1 :PD)

# Object Property: :sumPD2 (:sumPD2)

AnnotationAssertion(rdfs:comment :sumPD2 "second argument of the sum relation (restricted to PD)")
FunctionalObjectProperty(:sumPD2)
ObjectPropertyDomain(:sumPD2 :SUMPD)
ObjectPropertyRange(Annotation(rdfs:comment "From Dd18, Dd15 and Ad2") :sumPD2 :PD)

# Object Property: :sumPD3 (:sumPD3)

AnnotationAssertion(rdfs:comment :sumPD3 "third argument of the sum relation (restricted to PD)")
FunctionalObjectProperty(:sumPD3)
ObjectPropertyDomain(:sumPD3 :SUMPD)
ObjectPropertyRange(Annotation(rdfs:comment "From Dd18, Dd15 and Ad2") :sumPD3 :PD)

# Object Property: :tAt (:tAt)

AnnotationAssertion(rdfs:comment :tAt "temporary atom")
ObjectPropertyDomain(:tAt :ED)
ObjectPropertyRange(:tAt :T)

# Object Property: :tAtP1 (:tAtP1)

AnnotationAssertion(rdfs:comment :tAtP1 "first argument of the temporary atomic part relation")
SubObjectPropertyOf(Annotation(rdfs:comment "Dd23 (first half)") :tAtP1 :tP1)
FunctionalObjectProperty(:tAtP1)
ObjectPropertyDomain(:tAtP1 :ATP-t)
ObjectPropertyRange(Annotation(rdfs:comment "From Dd23, Ad10") :tAtP1 :ED)

# Object Property: :tAtP2 (:tAtP2)

AnnotationAssertion(rdfs:comment :tAtP2 "second argument of the temporary atomic part relation")
SubObjectPropertyOf(Annotation(rdfs:comment "Dd23 (first half)") :tAtP2 :tP2)
FunctionalObjectProperty(:tAtP2)
ObjectPropertyDomain(:tAtP2 :ATP-t)
ObjectPropertyRange(Annotation(rdfs:comment "From Dd23, Ad10") :tAtP2 :ED)

# Object Property: :tAtPt (:tAtPt)

AnnotationAssertion(rdfs:comment :tAtPt "time index of the temporary atomic part relation")
SubObjectPropertyOf(Annotation(rdfs:comment "Dd23 (first half)") :tAtPt :tPt)
FunctionalObjectProperty(:tAtPt)
ObjectPropertyDomain(:tAtPt :ATP-t)
ObjectPropertyRange(Annotation(rdfs:comment "From Dd23, Ad10") :tAtPt :T)

# Object Property: :tKNPED1 (:tKNPED1)

AnnotationAssertion(rdfs:comment :tKNPED1 "first argument of the constitution relation  (restricted to NPED)")
FunctionalObjectProperty(:tKNPED1)
ObjectPropertyDomain(:tKNPED1 :KNPED-t)
ObjectPropertyRange(Annotation(rdfs:comment "Ad20, approximation of Ad22") :tKNPED1 :NPED)

# Object Property: :tKNPED2 (:tKNPED2)

AnnotationAssertion(rdfs:comment :tKNPED2 "second argument of the constitution relation  (restricted to NPED)")
FunctionalObjectProperty(:tKNPED2)
ObjectPropertyDomain(:tKNPED2 :KNPED-t)
ObjectPropertyRange(Annotation(rdfs:comment "Ad20, approximation of Ad22") :tKNPED2 :NPED)

# Object Property: :tKNPEDt (:tKNPEDt)

AnnotationAssertion(rdfs:comment :tKNPEDt "time index of the constitution relation  (restricted to NPED)")
FunctionalObjectProperty(:tKNPEDt)
ObjectPropertyDomain(:tKNPEDt :KNPED-t)
ObjectPropertyRange(Annotation(rdfs:comment "Ad20 (part)") :tKNPEDt :T)

# Object Property: :tKPD1 (:tKPD1)

AnnotationAssertion(rdfs:comment :tKPD1 "first argument of the constitution relation  (restricted to PD)")
FunctionalObjectProperty(:tKPD1)
ObjectPropertyDomain(:tKPD1 :KPD-t)
ObjectPropertyRange(Annotation(rdfs:comment "Ad20, approximation of Ad23") :tKPD1 :PD)

# Object Property: :tKPD2 (:tKPD2)

AnnotationAssertion(rdfs:comment :tKPD2 "second argument of the constitution relation  (restricted to PD)")
FunctionalObjectProperty(:tKPD2)
ObjectPropertyDomain(:tKPD2 :KPD-t)
ObjectPropertyRange(Annotation(rdfs:comment "Ad20, approximation of Ad23") :tKPD2 :PD)

# Object Property: :tKPDt (:tKPDt)

AnnotationAssertion(rdfs:comment :tKPDt "time index of the constitution relation (restricted to PD)")
FunctionalObjectProperty(:tKPDt)
ObjectPropertyDomain(:tKPDt :KPD-t)
ObjectPropertyRange(Annotation(rdfs:comment "Ad20 (part)") :tKPDt :T)

# Object Property: :tKPED1 (:tKPED1)

AnnotationAssertion(rdfs:comment :tKPED1 "first argument of the constitution relation  (restricted to PED)")
FunctionalObjectProperty(:tKPED1)
ObjectPropertyDomain(:tKPED1 :KPED-t)
ObjectPropertyRange(Annotation(rdfs:comment "Ad20, approximation of Ad21") :tKPED1 :PED)

# Object Property: :tKPED2 (:tKPED2)

AnnotationAssertion(rdfs:comment :tKPED2 "second argument of the constitution relation  (restricted to PED)")
FunctionalObjectProperty(:tKPED2)
ObjectPropertyDomain(:tKPED2 :KPED-t)
ObjectPropertyRange(Annotation(rdfs:comment "Ad20, approximation of Ad21") :tKPED2 :PED)

# Object Property: :tKPEDt (:tKPEDt)

AnnotationAssertion(rdfs:comment :tKPEDt "time index of the constitution relation (restricted to PED)")
FunctionalObjectProperty(:tKPEDt)
ObjectPropertyDomain(:tKPEDt :KPED-t)
ObjectPropertyRange(Annotation(rdfs:comment "Ad20 (part)") :tKPEDt :T)

# Object Property: :tOv1 (:tOv1)

AnnotationAssertion(rdfs:comment :tOv1 "first argument of the temporary overlap relation")
FunctionalObjectProperty(:tOv1)
ObjectPropertyDomain(:tOv1 :OV-t)
ObjectPropertyRange(Annotation(rdfs:comment "From Dd21, Ad10") :tOv1 :ED)

# Object Property: :tOv2 (:tOv2)

AnnotationAssertion(rdfs:comment :tOv2 "second argument of the temporary overlap relation")
FunctionalObjectProperty(:tOv2)
ObjectPropertyDomain(:tOv2 :OV-t)
ObjectPropertyRange(:tOv2 :ED)

# Object Property: :tOvt (:tOvt)

AnnotationAssertion(rdfs:comment :tOvt "time index of the temporary overlap relation")
FunctionalObjectProperty(:tOvt)
ObjectPropertyDomain(:tOvt :OV-t)
ObjectPropertyRange(:tOvt :T)

# Object Property: :tP1 (:tP1)

AnnotationAssertion(rdfs:comment :tP1 "first argument of the temporary part relation")
SubObjectPropertyOf(Annotation(rdfs:comment "From Dd21, Ad16, Ad17") :tP1 :tOv1)
FunctionalObjectProperty(:tP1)
ObjectPropertyDomain(:tP1 :P-t)
ObjectPropertyRange(Annotation(rdfs:comment "Ad10 (third)") :tP1 :ED)

# Object Property: :tP2 (:tP2)

AnnotationAssertion(rdfs:comment :tP2 "second argument of the temporary part relation")
SubObjectPropertyOf(:tP2 :tOv2)
FunctionalObjectProperty(:tP2)
ObjectPropertyDomain(:tP2 :P-t)
ObjectPropertyRange(Annotation(rdfs:comment "Ad10 (third)") :tP2 :ED)

# Object Property: :tPC1 (:tPC1)

AnnotationAssertion(rdfs:comment :tPC1 "first argument of the participation relation")
FunctionalObjectProperty(:tPC1)
ObjectPropertyDomain(:tPC1 :PC-t)
ObjectPropertyRange(Annotation(rdfs:comment "Ad33") :tPC1 :ED)

# Object Property: :tPC2 (:tPC2)

AnnotationAssertion(rdfs:comment :tPC2 "second argument of the participation relation")
FunctionalObjectProperty(:tPC2)
ObjectPropertyDomain(:tPC2 :PC-t)
ObjectPropertyRange(Annotation(rdfs:comment "Ad33") :tPC2 :PD)

# Object Property: :tPCt (:tPCt)

AnnotationAssertion(rdfs:comment :tPCt "time index of the participation relation")
FunctionalObjectProperty(:tPCt)
ObjectPropertyDomain(:tPCt :PC-t)
ObjectPropertyRange(Annotation(rdfs:comment "Ad33") :tPCt :T)

# Object Property: :tPP1 (:tPP1)

AnnotationAssertion(rdfs:comment :tPP1 "first argument of the temporary proper part relation")
SubObjectPropertyOf(Annotation(rdfs:comment "Dd20") :tPP1 :tP1)
FunctionalObjectProperty(:tPP1)
ObjectPropertyDomain(:tPP1 :PP-t)
ObjectPropertyRange(Annotation(rdfs:comment "From Dd20, Ad10") :tPP1 :ED)

# Object Property: :tPP2 (:tPP2)

AnnotationAssertion(rdfs:comment :tPP2 "second argument of the temporary proper part relation")
SubObjectPropertyOf(Annotation(rdfs:comment "Dd20") :tPP2 :tP2)
FunctionalObjectProperty(:tPP2)
ObjectPropertyDomain(:tPP2 :PP-t)
ObjectPropertyRange(Annotation(rdfs:comment "From Dd20, Ad10") :tPP2 :ED)

# Object Property: :tPPt (:tPPt)

AnnotationAssertion(rdfs:comment :tPPt "time index of the temporary proper part relation")
SubObjectPropertyOf(Annotation(rdfs:comment "Dd20") :tPPt :tPt)
FunctionalObjectProperty(:tPPt)
ObjectPropertyDomain(:tPPt :PP-t)
ObjectPropertyRange(Annotation(rdfs:comment "From Dd20, Ad10") :tPPt :T)

# Object Property: :tPt (:tPt)

AnnotationAssertion(rdfs:comment :tPt "time index of the temporary part relation")
SubObjectPropertyOf(:tPt :tOvt)
FunctionalObjectProperty(:tPt)
ObjectPropertyDomain(:tPt :P-t)
ObjectPropertyRange(Annotation(rdfs:comment "Ad10 (third)") :tPt :T)

# Object Property: :tQl-AR-AQ1 (:tQl-AR-AQ1)

AnnotationAssertion(rdfs:comment :tQl-AR-AQ1 "first argument of the Temporary quale relation (restricted to AR and AQ)")
FunctionalObjectProperty(:tQl-AR-AQ1)
ObjectPropertyDomain(:tQl-AR-AQ1 :QL-AR-AQ-t)
ObjectPropertyRange(Annotation(rdfs:comment "Ad58, approximation of Ad60") :tQl-AR-AQ1 :AR)

# Object Property: :tQl-AR-AQ2 (:tQl-AR-AQ2)

AnnotationAssertion(rdfs:comment :tQl-AR-AQ2 "second argument of the Temporary quale relation (restricted to AR and AQ)")
FunctionalObjectProperty(:tQl-AR-AQ2)
ObjectPropertyDomain(:tQl-AR-AQ2 :QL-AR-AQ-t)
ObjectPropertyRange(Annotation(rdfs:comment "Ad58, approximation of Ad60") :tQl-AR-AQ2 :AQ)

# Object Property: :tQl-AR-AQt (:tQl-AR-AQt)

AnnotationAssertion(rdfs:comment :tQl-AR-AQt "time index of the Temporary quale relation (restricted to AR and AQ)")
FunctionalObjectProperty(:tQl-AR-AQt)
ObjectPropertyDomain(:tQl-AR-AQt :QL-AR-AQ-t)
ObjectPropertyRange(Annotation(rdfs:comment "Ad58") :tQl-AR-AQt :T)

# Object Property: :tQl-PR-PQ1 (:tQl-PR-PQ1)

AnnotationAssertion(rdfs:comment :tQl-PR-PQ1 "first argument of the Temporary quale relation (restricted to PR and PQ)")
FunctionalObjectProperty(:tQl-PR-PQ1)
ObjectPropertyDomain(:tQl-PR-PQ1 :QL-PR-PQ-t)
ObjectPropertyRange(Annotation(rdfs:comment "Ad58, approximation of Ad59") :tQl-PR-PQ1 :PR)

# Object Property: :tQl-PR-PQ2 (:tQl-PR-PQ2)

AnnotationAssertion(rdfs:comment :tQl-PR-PQ2 "second argument of the Temporary quale relation (restricted to PR and PQ)")
FunctionalObjectProperty(:tQl-PR-PQ2)
ObjectPropertyDomain(:tQl-PR-PQ2 :QL-PR-PQ-t)
ObjectPropertyRange(Annotation(rdfs:comment "Ad58, approximation of Ad59") :tQl-PR-PQ2 :PQ)

# Object Property: :tQl-PR-PQt (:tQl-PR-PQt)

AnnotationAssertion(rdfs:comment :tQl-PR-PQt "time index of the Temporary quale relation (restricted to PR and PQ)")
FunctionalObjectProperty(:tQl-PR-PQt)
ObjectPropertyDomain(:tQl-PR-PQt :QL-PR-PQ-t)
ObjectPropertyRange(Annotation(rdfs:comment "Ad58") :tQl-PR-PQt :T)

# Object Property: :tSum1 (:tSum1)

AnnotationAssertion(rdfs:comment :tSum1 "first argument of the temporary sum relation, this is the sum of the second and the third argument")
FunctionalObjectProperty(:tSum1)
ObjectPropertyDomain(:tSum1 :SUM-t)
ObjectPropertyRange(Annotation(rdfs:comment "From Dd21, Ad10, see also Dd26") :tSum1 :ED)

# Object Property: :tSum2 (:tSum2)

AnnotationAssertion(rdfs:comment :tSum2 "second argument of the temporary sum relation")
FunctionalObjectProperty(:tSum2)
ObjectPropertyDomain(:tSum2 :SUM-t)
ObjectPropertyRange(Annotation(rdfs:comment "From Dd21, Ad10, see also Dd26") :tSum2 :ED)

# Object Property: :tSum3 (:tSum3)

AnnotationAssertion(rdfs:comment :tSum3 "third argument of the temporary sum relation")
FunctionalObjectProperty(:tSum3)
ObjectPropertyDomain(:tSum3 :SUM-t)
ObjectPropertyRange(Annotation(rdfs:comment "From Dd21, Ad10, see also Dd26") :tSum3 :ED)

# Object Property: :tSumt (:tSumt)

AnnotationAssertion(rdfs:comment :tSumt "time index of the temporary sum relation")
FunctionalObjectProperty(:tSumt)
ObjectPropertyDomain(:tSumt :SUM-t)
ObjectPropertyRange(Annotation(rdfs:comment "From Dd21, Ad10, see also Dd26") :tSumt :T)



############################
#   Classes
############################

# Class: :AB (:AB)

AnnotationAssertion(rdfs:comment :AB "Abstract"^^xsd:string)
SubClassOf(:AB :PT)
SubClassOf(Annotation(rdfs:comment "from Dd15, Ad3") :AB ObjectAllValuesFrom(:ov :AB))
SubClassOf(Annotation(rdfs:comment "Ad3 (half)") :AB ObjectAllValuesFrom(:p :AB))
SubClassOf(Annotation(rdfs:comment "from Dd15, Ad3") :AB ObjectAllValuesFrom(ObjectInverseOf(:ov) :AB))
SubClassOf(Annotation(rdfs:comment "Ad3 (half)") :AB ObjectAllValuesFrom(ObjectInverseOf(:p) :AB))
DisjointClasses(:AB :ED)
DisjointClasses(:AB :PD)
DisjointClasses(:AB :Q)

# Class: :ACC (:ACC)

AnnotationAssertion(rdfs:comment :ACC "Accomplishment"^^xsd:string)
SubClassOf(:ACC :EV)
DisjointClasses(:ACC :ACH)

# Class: :ACH (:ACH)

AnnotationAssertion(rdfs:comment :ACH "Achievement"^^xsd:string)
SubClassOf(:ACH :EV)

# Class: :APO (:APO)

AnnotationAssertion(rdfs:comment :APO "Agentive Physical Object"^^xsd:string)
SubClassOf(:APO :POB)

# Class: :AQ (:AQ)

AnnotationAssertion(rdfs:comment :AQ "Abstract Quality"^^xsd:string)
SubClassOf(:AQ :Q)
SubClassOf(Annotation(rdfs:comment "Ad48 for dQt") :AQ ObjectSomeValuesFrom(:dQt :NPED))
DisjointClasses(:AQ :PQ)
DisjointClasses(:AQ :TQ)

# Class: :AR (:AR)

AnnotationAssertion(rdfs:comment :AR "Abstract Region"^^xsd:string)
SubClassOf(:AR :R)
DisjointClasses(:AR :PR)
DisjointClasses(:AR :TR)

# Class: :AS (:AS)

AnnotationAssertion(rdfs:comment :AS "Arbitrary Sum"^^xsd:string)
SubClassOf(:AS :ED)
DisjointClasses(:AS :NPED)
DisjointClasses(:AS :PED)

# Class: :ASO (:ASO)

AnnotationAssertion(rdfs:comment :ASO "Agentive Social Object"^^xsd:string)
SubClassOf(:ASO :SOB)
DisjointClasses(:ASO :NASO)
DisjointUnion(:ASO :SAG :SC)

# Class: :AT (:AT)

AnnotationAssertion(rdfs:comment :AT "Atom (atomic Abstract or Perdurant)")
SubClassOf(:AT :PT)
SubClassOf(:AT ObjectUnionOf(:AB :PD))
SubClassOf(Annotation(rdfs:comment "Dd16") :AT ObjectComplementOf(ObjectSomeValuesFrom(ObjectInverseOf(:pP) :PT)))

# Class: :ATP-t (:ATP-t)

AnnotationAssertion(rdfs:comment :ATP-t "identifier for a temporary atomic parthood relation instance")
SubClassOf(:ATP-t :P-t)

# Class: :CAT (:CAT)

AnnotationAssertion(rdfs:comment :CAT "Constant atom (constantly atomic Endurant)")
SubClassOf(:CAT :ED)
SubClassOf(:CAT ObjectComplementOf(ObjectSomeValuesFrom(ObjectInverseOf(:cPP) :PT)))

# Class: :CSUM (:CSUM)

AnnotationAssertion(rdfs:comment :CSUM "identifier for a constant sum relation instance")
SubClassOf(:CSUM :RELN)
SubClassOf(:CSUM ObjectSomeValuesFrom(:csum1 :ED))
SubClassOf(:CSUM ObjectSomeValuesFrom(:csum2 :ED))
SubClassOf(:CSUM ObjectSomeValuesFrom(:csum3 :ED))
DisjointClasses(:CSUM :K-t)
DisjointClasses(:CSUM :OV-t)
DisjointClasses(:CSUM :PC-t)
DisjointClasses(:CSUM :QL-t)
DisjointClasses(:CSUM :SUM)
DisjointClasses(:CSUM :SUM-t)

# Class: :ED (:ED)

AnnotationAssertion(rdfs:comment :ED "Endurant"^^xsd:string)
SubClassOf(:ED :PT)
SubClassOf(Annotation(rdfs:comment "Rephrasing of Ad35") :ED ObjectSomeValuesFrom(ObjectInverseOf(:tPC1) :PC-t))
DisjointClasses(:ED :PD)
DisjointClasses(:ED :Q)
DisjointUnion(:ED :AS :NPED :PED)

# Class: :EV (:EV)

AnnotationAssertion(rdfs:comment :EV "Event"^^xsd:string)
SubClassOf(:EV :PD)
DisjointClasses(:EV :STV)
DisjointUnion(:EV :ACC :ACH)

# Class: :F (:F)

AnnotationAssertion(rdfs:comment :F "Feature"^^xsd:string)
SubClassOf(:F :PED)
DisjointClasses(:F :M)
DisjointClasses(:F :POB)

# Class: :K-t (:K-t)

AnnotationAssertion(rdfs:comment :K-t "identifier for a constitution relation instance")
SubClassOf(:K-t :RELN)
DisjointClasses(:K-t :OV-t)
DisjointClasses(:K-t :PC-t)
DisjointClasses(:K-t :QL-t)
DisjointClasses(:K-t :SUM)
DisjointClasses(:K-t :SUM-t)

# Class: :KNPED-t (:KNPED-t)

AnnotationAssertion(rdfs:comment :KNPED-t "identifier for a constitution relation instance (restricted to NPED)")
SubClassOf(:KNPED-t :K-t)
SubClassOf(:KNPED-t ObjectSomeValuesFrom(:tKNPED1 :NPED))
SubClassOf(:KNPED-t ObjectSomeValuesFrom(:tKNPED2 :NPED))
SubClassOf(:KNPED-t ObjectSomeValuesFrom(:tKNPEDt :T))

# Class: :KPD-t (:KPD-t)

AnnotationAssertion(rdfs:comment :KPD-t "identifier for a constitution relation instance (restricted to PD)")
SubClassOf(:KPD-t :K-t)
SubClassOf(:KPD-t ObjectSomeValuesFrom(:tKPD1 :PD))
SubClassOf(:KPD-t ObjectSomeValuesFrom(:tKPD2 :PD))
SubClassOf(:KPD-t ObjectSomeValuesFrom(:tKPDt :T))

# Class: :KPED-t (:KPED-t)

AnnotationAssertion(rdfs:comment :KPED-t "identifier for a constitution relation instance (restricted to PED)")
SubClassOf(:KPED-t :K-t)
SubClassOf(:KPED-t ObjectSomeValuesFrom(:tKPED1 :PED))
SubClassOf(:KPED-t ObjectSomeValuesFrom(:tKPED2 :PED))
SubClassOf(:KPED-t ObjectSomeValuesFrom(:tKPEDt :T))

# Class: :M (:M)

AnnotationAssertion(rdfs:comment :M "Amount of Matter"^^xsd:string)
SubClassOf(:M :PED)
DisjointClasses(:M :POB)

# Class: :MOB (:MOB)

AnnotationAssertion(rdfs:comment :MOB "Mental Object"^^xsd:string)
SubClassOf(:MOB :NPOB)

# Class: :NAPO (:NAPO)

AnnotationAssertion(rdfs:comment :NAPO "Non-Agentive Physical Object"^^xsd:string)
SubClassOf(:NAPO :POB)

# Class: :NASO (:NASO)

AnnotationAssertion(rdfs:comment :NASO "Non-Agentive Social Object"^^xsd:string)
SubClassOf(:NASO :SOB)

# Class: :NPED (:NPED)

AnnotationAssertion(rdfs:comment :NPED "Non-Physical Endurant"^^xsd:string)
SubClassOf(:NPED :ED)
SubClassOf(Annotation(rdfs:comment "Approximation of Ad51") :NPED ObjectSomeValuesFrom(ObjectInverseOf(:dQt) :AQ))
DisjointClasses(:NPED :PED)

# Class: :NPOB (:NPOB)

AnnotationAssertion(rdfs:comment :NPOB "Non-Physical Object"^^xsd:string)
SubClassOf(:NPOB :NPED)
DisjointUnion(:NPOB :MOB :SOB)

# Class: :OV-t (:OV-t)

AnnotationAssertion(rdfs:comment :OV-t "identifier for a temporary overlap relation instance")
SubClassOf(:OV-t :RELN)
SubClassOf(:OV-t ObjectSomeValuesFrom(:tOv1 :ED))
SubClassOf(:OV-t ObjectSomeValuesFrom(:tOv2 :ED))
SubClassOf(:OV-t ObjectSomeValuesFrom(:tOvt :T))
DisjointClasses(:OV-t :PC-t)
DisjointClasses(:OV-t :QL-t)
DisjointClasses(:OV-t :SUM)
DisjointClasses(:OV-t :SUM-t)

# Class: :P-t (:P-t)

AnnotationAssertion(rdfs:comment :P-t "identifier for a temporary parthood relation instance")
SubClassOf(:P-t :OV-t)

# Class: :PC-t (:PC-t)

AnnotationAssertion(rdfs:comment :PC-t "identifier for a participation relation instance")
SubClassOf(:PC-t :RELN)
SubClassOf(:PC-t ObjectSomeValuesFrom(:tPC1 :ED))
SubClassOf(:PC-t ObjectSomeValuesFrom(:tPC2 :PD))
SubClassOf(:PC-t ObjectSomeValuesFrom(:tPCt :T))
DisjointClasses(:PC-t :QL-t)
DisjointClasses(:PC-t :SUM)
DisjointClasses(:PC-t :SUM-t)

# Class: :PD (:PD)

AnnotationAssertion(rdfs:comment :PD "Perdurant"^^xsd:string)
SubClassOf(:PD :PT)
SubClassOf(Annotation(rdfs:comment "Ad49 for dQt") :PD ObjectSomeValuesFrom(ObjectInverseOf(:dQt) :TL))
SubClassOf(Annotation(rdfs:comment "from Dd15, Ad2") :PD ObjectAllValuesFrom(:ov :PD))
SubClassOf(Annotation(rdfs:comment "Ad2  (half)") :PD ObjectAllValuesFrom(:p :PD))
SubClassOf(Annotation(rdfs:comment "from Dd15, Ad2") :PD ObjectAllValuesFrom(ObjectInverseOf(:ov) :PD))
SubClassOf(Annotation(rdfs:comment "Ad2 (half)") :PD ObjectAllValuesFrom(ObjectInverseOf(:p) :PD))
DisjointClasses(:PD :Q)
DisjointUnion(:PD :EV :STV)

# Class: :PED (:PED)

AnnotationAssertion(rdfs:comment :PED "Physical Endurant"^^xsd:string)
SubClassOf(:PED :ED)
SubClassOf(Annotation(rdfs:comment "Approximation of Ad50") :PED ObjectSomeValuesFrom(ObjectInverseOf(:dQt) :SL))
DisjointUnion(:PED :F :M :POB)

# Class: :POB (:POB)

AnnotationAssertion(rdfs:comment :POB "Physical Object"^^xsd:string)
SubClassOf(:POB :PED)
DisjointUnion(:POB :APO :NAPO)

# Class: :PP-t (:PP-t)

AnnotationAssertion(rdfs:comment :PP-t "identifier for a temporary proper parthood relation instance")
SubClassOf(:PP-t :P-t)

# Class: :PQ (:PQ)

AnnotationAssertion(rdfs:comment :PQ "Physical Quality"^^xsd:string)
SubClassOf(:PQ :Q)
SubClassOf(Annotation(rdfs:comment "Ad47 for dQt") :PQ ObjectSomeValuesFrom(:dQt :PED))
DisjointClasses(:PQ :TQ)

# Class: :PR (:PR)

AnnotationAssertion(rdfs:comment :PR "Physical Region"^^xsd:string)
SubClassOf(:PR :R)
DisjointClasses(:PR :TR)

# Class: :PRO (:PRO)

AnnotationAssertion(rdfs:comment :PRO "Process"^^xsd:string)
SubClassOf(:PRO :STV)
DisjointClasses(:PRO :ST)

# Class: :PT (:PT)

AnnotationAssertion(rdfs:comment :PT "Particular"^^xsd:string)
DisjointClasses(:PT :RELN)
DisjointUnion(:PT :AB :ED :PD :Q)

# Class: :Q (:Q)

AnnotationAssertion(rdfs:comment :Q "Quality"^^xsd:string)
SubClassOf(:Q :PT)
DisjointUnion(:Q :AQ :PQ :TQ)

# Class: :QL-AR-AQ-t (:QL-AR-AQ-t)

AnnotationAssertion(rdfs:comment :QL-AR-AQ-t "Identifier for a quale relation instance restricted to AR and AQ.")
SubClassOf(:QL-AR-AQ-t :QL-t)
SubClassOf(:QL-AR-AQ-t ObjectSomeValuesFrom(:tQl-AR-AQ1 :AR))
SubClassOf(:QL-AR-AQ-t ObjectSomeValuesFrom(:tQl-AR-AQ2 :AQ))
SubClassOf(:QL-AR-AQ-t ObjectSomeValuesFrom(:tQl-AR-AQt :T))

# Class: :QL-PR-PQ-t (:QL-PR-PQ-t)

AnnotationAssertion(rdfs:comment :QL-PR-PQ-t "Identifier for a quale relation instance restricted to PR and PQ.")
SubClassOf(:QL-PR-PQ-t :QL-t)
SubClassOf(:QL-PR-PQ-t ObjectSomeValuesFrom(:tQl-PR-PQ1 :PR))
SubClassOf(:QL-PR-PQ-t ObjectSomeValuesFrom(:tQl-PR-PQ2 :PQ))
SubClassOf(:QL-PR-PQ-t ObjectSomeValuesFrom(:tQl-PR-PQt :T))

# Class: :QL-t (:QL-t)

AnnotationAssertion(rdfs:comment :QL-t "identifier for a quale relation instance")
SubClassOf(:QL-t :RELN)
DisjointClasses(:QL-t :SUM)
DisjointClasses(:QL-t :SUM-t)

# Class: :R (:R)

AnnotationAssertion(rdfs:comment :R "Region"^^xsd:string)
SubClassOf(:R :AB)
DisjointUnion(:R :AR :PR :TR)

# Class: :RELN (:RELN)

AnnotationAssertion(rdfs:comment :RELN "Identifier of an N-ary relation instance (not in DOLCE, used because OWL is limited to binary relations)")

# Class: :S (:S)

AnnotationAssertion(rdfs:comment :S "Space Region"^^xsd:string)
SubClassOf(:S :PR)

# Class: :SAG (:SAG)

AnnotationAssertion(rdfs:comment :SAG "Social Agent"^^xsd:string)
SubClassOf(:SAG :ASO)
DisjointClasses(:SAG :SC)

# Class: :SC (:SC)

AnnotationAssertion(rdfs:comment :SC "Society"^^xsd:string)
SubClassOf(:SC :ASO)

# Class: :SL (:SL)

AnnotationAssertion(rdfs:comment :SL "Spatial Location"^^xsd:string)
SubClassOf(:SL :PQ)

# Class: :SOB (:SOB)

AnnotationAssertion(rdfs:comment :SOB "Social Object"^^xsd:string)
SubClassOf(:SOB :NPOB)
DisjointUnion(:SOB :ASO :NASO)

# Class: :ST (:ST)

AnnotationAssertion(rdfs:comment :ST "State"^^xsd:string)
SubClassOf(:ST :STV)

# Class: :STV (:STV)

AnnotationAssertion(rdfs:comment :STV "Stative"^^xsd:string)
SubClassOf(:STV :PD)
DisjointUnion(:STV :PRO :ST)

# Class: :SUM (:SUM)

AnnotationAssertion(rdfs:comment :SUM "identifier for a sum relation instance")
SubClassOf(:SUM :RELN)
DisjointClasses(:SUM :SUM-t)

# Class: :SUM-t (:SUM-t)

AnnotationAssertion(rdfs:comment :SUM-t "identifier for a temporary sum relation instance")
SubClassOf(:SUM-t :RELN)
SubClassOf(:SUM-t ObjectSomeValuesFrom(:tSum1 :ED))
SubClassOf(:SUM-t ObjectSomeValuesFrom(:tSum2 :ED))
SubClassOf(:SUM-t ObjectSomeValuesFrom(:tSum3 :ED))
SubClassOf(:SUM-t ObjectSomeValuesFrom(:tSumt :T))

# Class: :SUMAB (:SUMAB)

AnnotationAssertion(rdfs:comment :SUMAB "identifier for a sum relation instance (restricted to AB)")
SubClassOf(:SUMAB :SUM)
SubClassOf(:SUMAB ObjectSomeValuesFrom(:sumAB1 :AB))
SubClassOf(:SUMAB ObjectSomeValuesFrom(:sumAB2 :AB))
SubClassOf(:SUMAB ObjectSomeValuesFrom(:sumAB3 :AB))

# Class: :SUMPD (:SUMPD)

AnnotationAssertion(rdfs:comment :SUMPD "identifier for a sum relation instance (restricted to PD)")
SubClassOf(:SUMPD :SUM)
SubClassOf(:SUMPD ObjectSomeValuesFrom(:sumPD1 :PD))
SubClassOf(:SUMPD ObjectSomeValuesFrom(:sumPD2 :PD))
SubClassOf(:SUMPD ObjectSomeValuesFrom(:sumPD3 :PD))

# Class: :T (:T)

AnnotationAssertion(rdfs:comment :T "Time Interval"^^xsd:string)
EquivalentClasses(Annotation(rdfs:comment "Ad53") :T ObjectUnionOf(:T ObjectSomeValuesFrom(:ql :TL)))
SubClassOf(:T :TR)

# Class: :TL (:TL)

AnnotationAssertion(rdfs:comment :TL "Temporal Location"^^xsd:string)
SubClassOf(:TL :TQ)

# Class: :TQ (:TQ)

AnnotationAssertion(rdfs:comment :TQ "Temporal Quality"^^xsd:string)
SubClassOf(:TQ :Q)
SubClassOf(Annotation(rdfs:comment "Ad46 for dQt") :TQ ObjectSomeValuesFrom(:dQt :PD))
SubClassOf(Annotation(rdfs:comment "Ad55, Ad52") :TQ ObjectSomeValuesFrom(ObjectInverseOf(:ql) :TR))

# Class: :TR (:TR)

AnnotationAssertion(rdfs:comment :TR "Temporal Region"^^xsd:string)
SubClassOf(:TR :R)


SubObjectPropertyOf(ObjectPropertyChain(ObjectInverseOf(:cP) :cP) :cOv)
SubObjectPropertyOf(ObjectPropertyChain(ObjectInverseOf(:csum2) :csum1) :cP)
SubObjectPropertyOf(ObjectPropertyChain(ObjectInverseOf(:csum3) :csum1) :cP)
SubObjectPropertyOf(Annotation(rdfs:comment "D15 (half)") ObjectPropertyChain(ObjectInverseOf(:p) :p) :ov)
SubObjectPropertyOf(Annotation(rdfs:comment "Approximation of Dd69") ObjectPropertyChain(ObjectInverseOf(:sD) :pre) :pre)
SubObjectPropertyOf(Annotation(rdfs:comment "inferred from Dd18") ObjectPropertyChain(ObjectInverseOf(:sumAB2) :sumAB1) :p)
SubObjectPropertyOf(Annotation(rdfs:comment "inferred from Dd18") ObjectPropertyChain(ObjectInverseOf(:sumAB3) :sumAB1) :p)
SubObjectPropertyOf(Annotation(rdfs:comment "inferred from Dd18") ObjectPropertyChain(ObjectInverseOf(:sumPD2) :sumPD1) :p)
SubObjectPropertyOf(Annotation(rdfs:comment "inferred from Dd18") ObjectPropertyChain(ObjectInverseOf(:sumPD3) :sumPD1) :p)
SubObjectPropertyOf(Annotation(rdfs:comment "Dd23 (second half)") ObjectPropertyChain(ObjectInverseOf(:tAtP1) :tAtPt) :tAt)
SubObjectPropertyOf(Annotation(rdfs:comment "Ad26") ObjectPropertyChain(ObjectInverseOf(:tKNPED1) :tKNPEDt) :pre)
SubObjectPropertyOf(Annotation(rdfs:comment "Ad26") ObjectPropertyChain(ObjectInverseOf(:tKNPED2) :tKNPEDt) :pre)
SubObjectPropertyOf(Annotation(rdfs:comment "Ad26") ObjectPropertyChain(ObjectInverseOf(:tKPD1) :tKPDt) :pre)
SubObjectPropertyOf(Annotation(rdfs:comment "Ad26") ObjectPropertyChain(ObjectInverseOf(:tKPD2) :tKPDt) :pre)
SubObjectPropertyOf(Annotation(rdfs:comment "Ad26") ObjectPropertyChain(ObjectInverseOf(:tKPED1) :tKPEDt) :pre)
SubObjectPropertyOf(Annotation(rdfs:comment "Ad26") ObjectPropertyChain(ObjectInverseOf(:tKPED2) :tKPEDt) :pre)
SubObjectPropertyOf(Annotation(rdfs:comment "From Dd21 and Ad17") ObjectPropertyChain(ObjectInverseOf(:tOv1) :tOvt) :pre)
SubObjectPropertyOf(Annotation(rdfs:comment "From Dd21 and Ad17") ObjectPropertyChain(ObjectInverseOf(:tOv2) :tOvt) :pre)
SubObjectPropertyOf(Annotation(rdfs:comment "Ad17 (half)") ObjectPropertyChain(ObjectInverseOf(:tP1) :tPt) :pre)
SubObjectPropertyOf(Annotation(rdfs:comment "Ad17 (half)") ObjectPropertyChain(ObjectInverseOf(:tP2) :tPt) :pre)
SubObjectPropertyOf(Annotation(rdfs:comment "Ad36") ObjectPropertyChain(ObjectInverseOf(:tPC1) :tPCt) :pre)
SubObjectPropertyOf(Annotation(rdfs:comment "Ad36") ObjectPropertyChain(ObjectInverseOf(:tPC2) :tPCt) :pre)
SubObjectPropertyOf(Annotation(rdfs:comment "Approximation of Ad65") ObjectPropertyChain(ObjectInverseOf(:tQl-AR-AQ2) :tQl-AR-AQt) :pre)
SubObjectPropertyOf(Annotation(rdfs:comment "Approximation of Ad65") ObjectPropertyChain(ObjectInverseOf(:tQl-PR-PQ2) :tQl-PR-PQt) :pre)
)
